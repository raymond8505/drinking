{"version":3,"sources":["fakeGames.js","DataHelper.js","components/Loader.js","components/NotFound.js","components/EditButton.js","components/DeleteButton.js","components/GameSelect.js","components/RuleRow.js","components/RulesList.js","components/AddRulesForm.js","components/Alert.js","components/GameListItem.js","components/GameList.js","constants.js","components/GameAutoComplete.js","components/GamePill.js","components/GameMultiSelect.js","components/AddGameForm.js","components/ComboCounter.js","components/Game.js","components/Games.js","components/SessionManager.js","components/ShortCutsModal.js","components/Desktop.js","components/Login.js","config.js","base.js","components/Signup.js","components/App.js","components/Router.js","index.js"],"names":["fakeGames","DataHelper","data","hasData","Object","keys","length","forEach","func","undefined","Error","map","getGameByKey","key","getChildGames","parentKey","games","game","parent_game","gameHasRules","rules","getGameRules","includeParents","order","_this","ruleKey","assign","gameKey","objectCollectionToArrayWithKey","collection","keyFieldName","arr","obj","push","arrayWithKeyToObjectCollection","sortRules","rulesArr","sort","a","b","dirNum","direction","valA","valB","field","toLowerCase","title","filed","sanitizeForSorting","val","char","startReg","RegExp","endReg","replace","getNewRuleKey","Date","now","getNewGameKey","sortGamesBy","dir","fieldArr","toRet","indexOf","e","console","log","getParentGames","gameOrKey","parent","gamesToKeys","getAncestors","ancestors","curKey","reverse","gameHasOtherUserGames","user","childGames","success","owner","gameHasOtherUserOwnedRules","hasOthers","rule","this","Loader","className","props","message","React","Component","defaultProps","NotFound","EditButton","state","currentMode","setEditing","editing","setState","handleClick","preventDefault","handler","onClick","role","DeleteButton","GameSelect","innerSelect","createRef","test","outPutOptions","options","value","defaultValue","ref","onChange","includeToplevel","excludedGames","RuleRow","ruleField","drinksField","gameSelect","handleRuleEdit","current","drinks","ruleObj","editRule","ruleIndex","handleRuleDelete","window","confirm","deleteRule","renderRule","input","onKeyUp","closeOnEscape","which","type","span","renderOwner","ownerhash","getUser","email","renderDrinks","disabled","handleDoubleClick","renderGame","Link","to","focus","onDoubleClick","canEditRule","canDeleteRule","RulesList","currentFilter","filterField","ruleMatchesFilter","ruleText","renderRuleRows","gameIndex","index","onFilterKeyUp","currentTarget","onHeaderCellClick","target","getAttribute","renderSortLabel","addEventListener","shiftKey","metaKey","ctrlKey","prevProps","prevState","currentGameKey","setTimeout","placeholder","cellPadding","cellSpacing","data-field","recursive","AddRulesForm","onWindowKeyPress","altKey","resetForm","clearForm","handleAddClick","ruleTitle","addRule","alert","name","Alert","Tag","tag","children","GameListItem","titleField","onAddEditClick","editGame","onDeleteClick","deleteGame","onNameInputKeyPress","renderName","viewGame","onKeyPress","link","onCopyClick","copyGame","id","canEditGame","canDeleteGame","userLoggedIn","showChildren","GameList","renderGameList","RAYMOND_UID","GameAutoComplete","onTitleFieldKeyPress","suggestions","allSuggestionsSelected","nextSuggestion","previousSuggestion","clearSuggestions","currentSuggestion","chooseGame","renderAutoComplete","isSelected","g","selectedGames","q","includeGeneralRules","includes","onGameSelect","clearTitleField","setCurrentSuggestion","i","findPreviousSuggestion","prevIndex","findNextSuggestion","nextIndex","allSelected","renderSuggestions","style","height","classes","join","onMouseEnter","currentSelection","GamePill","onClose","linkGame","showCloseBtn","GameMultiSelect","sanitizeGames","gameSelected","gen","clearGames","newGameSelect","selected","selectedGame","onGameRemoved","gameToRemove","filter","renderGames","AddGameForm","listenForShortcuts","onAddGameClick","parents","addGame","onMultiSelectError","onError","ComboCounter","animating","open","maxCombo","animateSpeed","onGlobalKeyPress","targetTag","tagName","addDrink","removeDrink","clearDrinks","count","setSessionCombo","handleRemoveDrinkClick","animateCount","handleClearDrinksClick","handleAddDrinkClick","calcShotHeight","handleToggleClick","defaultTypes","Game","titleInput","editButton","shell","parentsMS","gameScrollPostBeforeUpdate","onParentChange","newParent","thisGameKey","handleTitleEditClick","renderParentPills","renderBreadCrumbs","html","ancestor","class","scrollTop","scrollTo","Helmet","currentComboCount","width","Games","onToggleClick","visible","canEditRules","canDeleteRules","SessionManager","currentSession","keyField","handleCreateSession","createSession","leaveSession","handleJoinSession","joinSession","renderSessionButtons","href","ShortcutsModal","shortcuts","combo","desc","show","close","renderShortcuts","shortcut","Desktop","showShortcuts","mode","renderAuthButton","match","params","ID","withRouter","Login","userField","passwordField","authenticate","pass","error","required","config","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","initializeApp","base","Rebase","createClass","database","Signup","passwordField2","signup","pass1","App","mobile","uid","users","loading","signupError","loginError","loggingIn","sessions","gamesInited","sessionKeyLength","sessionLife","shortCutsModal","getCurrentSessionComboCount","inASession","setSession","session","created","getTime","pruneSessions","toUpperCase","sessionKeyExists","sessionStorage","setItem","removeItem","generateSessionKey","code","Math","round","random","String","fromCharCode","generateUniqueSessionKey","newRule","sanitizeDrinks","oldGame","newGame","gameTitle","newGameKey","copyRules","oldGameKey","newRules","newRuleKey","newKey","history","mobileCheck","matches","authHandler","resp","userExists","addUser","location","pathname","u","p","auth","signInWithEmailAndPassword","then","signInError","catch","logout","signOut","stateUser","hash","createUserWithEmailAndPassword","res","onLoginClick","db","hostname","fbRefU","syncState","context","fbRefSessions","t","ssKey","getItem","fbRef","onAuthStateChanged","matchMedia","addListener","view","ShortCutsModal","Router","BrowserRouter","Switch","Route","path","render","exact","component","document","querySelector"],"mappings":"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","file":"static/js/main.227a75a8.chunk.js","sourcesContent":["const fakeGames = {\n    \"game0\" : {\n      \"rules\" : {\n        \"game0_rule1585428503206\" : {\n          \"drinks\" : \"2 drinks\",\n          \"gameKey\" : \"game0\",\n          \"owner\" : \"WCRKE62ab8gw6FB2iCYkOX4XmIg2\",\n          \"rule\" : \"The name of the episode or movie is said or written\"\n        },\n        \"game0_rule1585443393434\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game0\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"obvious stock footage\"\n        },\n        \"game0_rule1585443993724\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game0\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"ESL Characters speaking English for no reason\"\n        },\n        \"game0_rule1585444223055\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game0\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"nut shot\"\n        },\n        \"game0_rule1585445102020\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game0\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"obviously empty coffee cup\"\n        },\n        \"game0_rule1585447770911\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game0\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"someone rips up a photo \"\n        },\n        \"game0_rule1585507595857\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game0\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"Incorrect portrayal of \\\"hacking\\\"\"\n        },\n        \"game0_rule1585528860565\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game0\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"romantic tension between non spouses (will they / wont they characters)\"\n        }\n      },\n      \"title\" : \"General Rules\"\n    },\n    \"game1\" : {\n      \"parent_game\" : \"game0\",\n      \"rules\" : {\n        \"game1_rule1\" : {\n          \"drinks\" : \"1 drink\",\n          \"gameKey\" : \"game1\",\n          \"rule\" : \"Bone snap\"\n        },\n        \"game1_rule1585442777686\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"Explosion\"\n        },\n        \"game1_rule1585442794346\" : {\n          \"drinks\" : \"2\",\n          \"gameKey\" : \"game1\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"cool explosion (ex: slow mo)\"\n        },\n        \"game1_rule1585442823231\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"unrealistic survival / healing\"\n        },\n        \"game1_rule1585442901374\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"glass breaks\"\n        },\n        \"game1_rule1585442925083\" : {\n          \"drinks\" : \"3\",\n          \"gameKey\" : \"game1\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"decapitation\"\n        },\n        \"game1_rule1585443336960\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"slow motion\"\n        },\n        \"game1_rule1585444849287\" : {\n          \"drinks\" : \"3\",\n          \"gameKey\" : \"game1\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"\\\"turn in your badge and gun\\\" / \\\"youre suspended!\\\" / etc\"\n        },\n        \"game1_rule1585448652082\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"headshot\"\n        }\n      },\n      \"title\" : \"Action\"\n    },\n    \"game1585442982618\" : {\n      \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n      \"parent_game\" : \"game0\",\n      \"rules\" : {\n        \"game1585442982618_rule1585442993103\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1585442982618\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"Any dino related pun\"\n        },\n        \"game1585442982618_rule1585443044303\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1585442982618\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"Anytime you see a choker or midriff\"\n        },\n        \"game1585442982618_rule1585443065678\" : {\n          \"drinks\" : \"drink til it stops\",\n          \"gameKey\" : \"game1585442982618\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"Dino roar\"\n        },\n        \"game1585442982618_rule1585443084585\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1585442982618\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"bad cgi\"\n        },\n        \"game1585442982618_rule1585443110038\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1585442982618\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"T Rex does something with his hands\"\n        },\n        \"game1585442982618_rule1585443158546\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1585442982618\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"Dinosaur is too big to fit in something\"\n        },\n        \"game1585442982618_rule1585443171333\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1585442982618\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"poor dino disguising / someone doesnt notice the dino is alive\"\n        },\n        \"game1585442982618_rule1585448716738\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1585442982618\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"someone grabs someone else's dick\"\n        }\n      },\n      \"title\" : \"Tammy and the T Rex\"\n    },\n    \"game1585446169128\" : {\n      \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n      \"parent_game\" : \"game1\",\n      \"rules\" : {\n        \"game1585446169128_rule1585446187228\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1585446169128\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"\\\"enhance\\\"\"\n        }\n      },\n      \"title\" : \"Police / Crime\"\n    },\n    \"game1585519764301\" : {\n      \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n      \"parent_game\" : \"game1\",\n      \"rules\" : {\n        \"game1585519764301_rule1585519780902\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1585519764301\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"Cross Fade\"\n        },\n        \"game1585519764301_rule1585519789583\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1585519764301\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"Saxophone Soundtrack\"\n        }\n      },\n      \"title\" : \"Man Hunt\"\n    },\n    \"game1585541082218\" : {\n      \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n      \"parent_game\" : \"game1585541104293\",\n      \"rules\" : {\n        \"game1585541082218_rule1585541134205\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1585541082218\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"Something is bejewelled\"\n        },\n        \"game1585541082218_rule1585541642525\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1585541082218\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"a tiger hurts or scares someone\"\n        },\n        \"game1585541082218_rule1585545303143\" : {\n          \"drinks\" : \"1\",\n          \"gameKey\" : \"game1585541082218\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"tacky / trashy decorations\"\n        }\n      },\n      \"title\" : \"Tiger King\"\n    },\n    \"game1585541104293\" : {\n      \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n      \"parent_game\" : \"game0\",\n      \"rules\" : {\n        \"game1585541104293_rule1585751022903\" : {\n          \"drinks\" : \"1 drink\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"Someone Cries\"\n        }\n      },\n      \"title\" : \"Reality TV\"\n    },\n    \"game1585600289161\" : {\n      \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n      \"parent_game\" : \"game1\",\n      \"title\" : \"Jason Statham\"\n    },\n    \"game1585600326133\" : {\n      \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n      \"parent_game\" : \"game1585600289161\",\n      \"rules\" : {\n        \"game1585600326133_rule1585600342757\" : {\n          \"drinks\" : \"1\",\n          \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n          \"rule\" : \"Statham uses his boomerang\"\n        }\n      },\n      \"title\" : \"In The Name of the king\"\n    },\n    \"game1585662389801\" : {\n      \"owner\" : \"\",\n      \"parent_game\" : \"game1585541104293\",\n      \"title\" : \"90 Day Fiance\"\n    },\n    \"game1585662406239\" : {\n      \"owner\" : \"\",\n      \"parent_game\" : \"game1585541104293\",\n      \"rules\" : {\n        \"game1585662406239_rule1585662454054\" : {\n          \"drinks\" : \"everyone but the closest guess drinks. Price is right rules\",\n          \"gameKey\" : \"game1585662406239\",\n          \"owner\" : \"\",\n          \"rule\" : \"Everyone guesses the budget of each bride before they say it\"\n        }\n      },\n      \"title\" : \"Say Yes To The Dress\"\n    },\n    \"game1585872782855\" : {\n      \"owner\" : \"uGqTXpxQHzg4K7DRhObVWvValvF3\",\n      \"parent_game\" : \"game0\",\n      \"title\" : \"test to delete\"\n    },\n    \"game2\" : {\n      \"parent_game\" : \"game1\",\n      \"rules\" : {\n        \"game2_rule1\" : {\n          \"drinks\" : \"1 drink\",\n          \"gameKey\" : \"game2\",\n          \"rule\" : \"Splits\"\n        }\n      },\n      \"title\" : \"Jean Claude Van Damme\"\n    },\n    \"game3\" : {\n      \"parent_game\" : \"game0\",\n      \"rules\" : {\n        \"game3_rule1\" : {\n          \"drinks\" : \"1 sip\",\n          \"gameKey\" : \"game3\",\n          \"owner\" : \"WCRKE62ab8gw6FB2iCYkOX4XmIg2\",\n          \"rule\" : \"Jump Scare\"\n        },\n        \"game3_rule1585427944776\" : {\n          \"drinks\" : \"1 drink\",\n          \"gameKey\" : \"game3\",\n          \"owner\" : \"WCRKE62ab8gw6FB2iCYkOX4XmIg2\",\n          \"rule\" : \"rule added by raymond@raymond\"\n        }\n      },\n      \"title\" : \"Horror Movies\"\n    },\n    \"game4\" : {\n      \"parent_game\" : \"game0\",\n      \"title\" : \"Cartoons\"\n    },\n    \"game5\" : {\n      \"parent_game\" : \"game4\",\n      \"rules\" : {\n        \"game5_rule1\" : {\n          \"drinks\" : \"drink til it stops\",\n          \"gameKey\" : \"game5\",\n          \"rule\" : \"CGI Webslinging\"\n        }\n      },\n      \"title\" : \"Adventures of Spiderman\"\n    }\n  }\n\nexport default fakeGames;","class DataHelper\n{\n    constructor(data)\n    {\n        this.data = data;\n    }\n\n    data = {};\n\n    hasData = () => this.data && Object.keys(this.data).length > 0;\n\n    forEach = (func,data) => {\n\n        if(data === undefined)\n        {\n            throw new Error('DataHelper.forEach requires a data parameter');\n        }\n\n        return Object.keys(data).map(func);\n    }\n\n    getGameByKey = (key) => {\n\n        //console.log(this.data[key]);\n\n        return this.data[key];\n    }\n\n    getChildGames = (parentKey) => {\n\n        //console.log('get child games');\n\n        let games = {};\n\n        Object.keys(this.data).map((key) => {\n\n            let game = this.getGameByKey(key);\n\n            if(game.parent_game && game.parent_game[0] === parentKey)\n            {\n                //console.log(game,game.parent_game,'===',parentKey);\n                games[key] = game;\n            }\n\n            return null;\n        });\n\n        //console.log(games);\n\n        return games;//this.sortGamesBy('title','asc',games);\n    }\n\n    gameHasRules = (game) => game.rules && Object.keys(game.rules).length > 0;\n\n    getGameRules = (key,includeParents = true,order) => {\n\n        let game = this.getGameByKey(key);\n        let rules = {};\n        let _this = this;\n\n        if(this.gameHasRules(game))\n        {\n            this.forEach((ruleKey) => {\n                rules[ruleKey] = Object.assign(game.rules[ruleKey],{gameKey : key});\n            },game.rules);\n        }\n\n        if(includeParents && game.parent_game && game.parent_game.length > 0)\n        {\n            //console.log('parent rules too');\n\n            game.parent_game.map((parentKey) => {\n                \n                return Object.assign(rules, _this.getGameRules(parentKey,false,order));\n\n            });\n        }\n\n        return rules;\n    }\n    \n    // getGameRules = (key,recursive = false,order) => {\n        \n    //     let game = this.getGameByKey(key);\n    //     let rules = {};\n    //     let _this = this;\n\n    //     if(this.gameHasRules(game))\n    //     {\n    //         this.forEach((ruleKey) => {\n    //             rules[ruleKey] = Object.assign(game.rules[ruleKey],{gameKey : key});\n    //         },game.rules);\n    //     }\n        \n    //     if(recursive && game.parent_game)\n    //     {\n    //         game.parent_game.forEach((key) => {\n    //             let parentGame = this.getGameByKey(key);\n            \n    //             if(parentGame && game.parent_game)\n    //             {\n    //                 rules = Object.assign(rules,_this.getGameRules(key,recursive,order));\n    //             }\n    //         });\n    //     }\n\n    //     return rules;\n    // }\n\n    objectCollectionToArrayWithKey = (collection,keyFieldName = 'key') => {\n\n        let arr = [];\n\n        this.forEach((key)=>{\n            var obj = collection[key];\n                obj[keyFieldName] = key;\n\n            arr.push(obj);\n        },collection);\n        return arr;\n    }\n\n    arrayWithKeyToObjectCollection = (arr,keyFieldName = 'key') => {\n\n        let collection = {};\n\n            arr.forEach((obj) => {\n                \n                let key = obj[keyFieldName];\n                \n                obj[keyFieldName] = null;\n\n                collection[key] = obj;\n            });\n\n        return collection;\n    }\n\n    sortRules = (rules,order) => {\n\n        let rulesArr = this.objectCollectionToArrayWithKey(rules);\n\n        //console.log(rulesArr);\n        \n        rulesArr.sort((a,b) => {\n            \n            let dirNum = order.direction === 'asc' ? 1 : -1;\n            let valA = '';\n            let valB = '';\n\n            switch(order.field)\n            {\n                case 'rule' :\n                case 'drinks' :\n                    valA = a[order.field].toLowerCase();\n                    valB = b[order.field].toLowerCase();\n                    break;\n                case 'game' :\n                    valA = this.getGameByKey(a.gameKey).title.toLowerCase();\n                    valB = this.getGameByKey(b.gameKey).title.toLowerCase();\n                    break;\n                default :\n                    valA = a[order.field];\n                    valB = b[order.filed];\n            }\n\n            valA = this.sanitizeForSorting(valA);\n            valB = this.sanitizeForSorting(valB);\n\n            return valA <= valB ? -1 * dirNum : dirNum;\n        });\n\n        //console.log(rulesArr);\n\n        let rulesCollection = this.arrayWithKeyToObjectCollection(rulesArr);\n        \n        return rulesCollection;\n    }\n\n    sanitizeForSorting = (val) => {\n\n        let badChars = ['\"',\"'\",'-','(',')'];\n\n        badChars.forEach((char) => {\n            \n            let startReg = new RegExp(`^[${char}]+`);\n            let endReg = new RegExp(`[${char}]+$`);\n\n            val = val.replace(startReg,'').replace(endReg,'');\n        });\n\n        return val;\n    }\n\n    getNewRuleKey = (gameKey) => {\n\n        return `${gameKey}_rule${Date.now()}`;\n    }\n\n    getNewGameKey = () => `game${Date.now()}`;\n\n    sortGamesBy = (field,dir = 'asc',games) => {\n        \n        if(games === undefined)\n            return  {};\n\n        //console.log('sort games',games);\n        //console.log('sort games',games);\n\n        let fieldArr = []\n        let toRet = {};\n        let dirNum = dir.toLowerCase().indexOf('asc') === 0 ? 1 : -1;\n\n        this.forEach((key) => {\n            let game = this.getGameByKey(key);\n\n            if(!game)\n                return;\n\n            try\n            {\n\n                fieldArr.push(\n                    {\n                        key : key,\n                        [field] : game[field]\n                    }\n                );\n            }\n            catch(e)\n            {\n                console.log(game,e);\n                return;\n            }\n        },games);\n\n        fieldArr.sort((a,b) => {\n\n            switch(typeof a[field])\n            {\n                case 'string' :\n                default : \n                    return a[field] && b[field] ? a[field].toLowerCase() < b[field].toLowerCase() ? dirNum * -1 : dirNum * 1 : 0;\n            }\n\n        })\n\n        fieldArr.forEach((game) => {\n            toRet[game.key] = this.getGameByKey(game.key);\n        });\n\n        return toRet;\n\n    }\n\n    getParentGames = (gameOrKey) => {\n\n        let game = typeof gameOrKey === 'object' ? gameOrKey : this.getGameByKey(gameOrKey);\n\n        let parents = game.parent_game && game.parent_game.length > 0 ? game.parent_game.map((parentKey) => {\n\n            let parent = this.getGameByKey(parentKey);\n                parent.gameKey = parentKey;\n\n                return parent;\n        }) : [];\n\n        return parents;\n        \n    }\n\n    gamesToKeys = (games) => {\n\n        return games.map((game) => {\n            return game.gameKey;\n        })\n    }\n\n    getAncestors = (key) => {\n        let ancestors = [];\n        //let game = this.getGameByKey(key);\n        \n        let curKey = key;\n        let parent = undefined; //this.getParentGame(key);\n\n        while(parent !== undefined)\n        {\n            curKey = parent.key;\n            parent = this.getParentGames(curKey);\n\n            ancestors.push(parent);\n            \n        }\n\n        return ancestors.reverse();\n    }\n\n    gameHasOtherUserGames = (gameKey,user) => {\n        \n        let childGames = this.getChildGames(gameKey);\n        let success = true;\n\n        this.forEach((key) => {\n\n            let game = this.getGameByKey(key);\n\n            if(game.owner !== user)\n            {\n                success = false;\n                return;\n            }\n            \n        },childGames);\n\n        return success;\n    }\n\n    gameHasOtherUserOwnedRules = (game,user) => {\n\n        let hasOthers = false;\n\n        this.forEach((key)=>{\n\n            let rule = game.rules[key];\n\n            //console.log(rule);\n            \n            if(rule && Object.keys(rule).length > 0 && rule.owner && rule.owner !== user)\n            {\n                hasOthers = true;\n                return;\n            }\n\n        },game.rules);\n        return hasOthers;\n    }\n}\nexport default DataHelper;\n","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass Loader extends React.Component\n{\n    static propTypes = {\n        message : PropTypes.string\n    };\n    static defaultProps =  {\n        message : ''\n    }\n\n    render()\n    {\n        return (\n            <div className=\"Loader\">\n                <div className=\"lds-dual-ring\"></div>\n                {this.props.message !== '' ? <h4 className=\"Loader__message\">{this.props.message}</h4> : null}\n            </div>);\n    }loading\n}\n\nexport default Loader;","import React from 'react';\n\nclass NotFound extends React.Component\n{\n    render()\n    {\n        return (\n            <div className=\"NotFound\">\n                <h1>Page Not Found</h1>\n            </div>);\n    }\n}\n\nexport default NotFound;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditButton extends React.Component\n{\n    static propTypes = {\n        handler : PropTypes.func.isRequired\n    };\n\n    state = {\n        currentMode : 'display'\n    };\n\n    setEditing = (editing) => {\n        this.setState({editing : editing});\n    }\n\n    handleClick = (e) => {\n    \n        e.preventDefault();\n\n        this.setState ({ currentMode : this.state.currentMode === 'display' ? 'confirm' : 'display'});\n        \n        this.props.handler(e);\n    }\n\n    render()\n    {\n        return (\n            <button className={`EditButton EditButton--${this.state.currentMode}`} onClick={this.handleClick} title=\"Edit Game\">\n                <span className=\"sr-only\">\n                    {this.state.currentMode === 'display' ? 'Edit' : 'Confirm'}\n                </span>\n                <i className=\"EditButton__icon\" role=\"presentation\"></i>\n            </button>);\n    }\n}\n\nexport default EditButton;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass DeleteButton extends React.Component\n{\n    static propTypes = {\n        handler : PropTypes.func.isRequired\n    };\n\n    state = {\n        currentMode : 'display'\n    };\n\n    handleClick = (e) => {\n    \n        e.preventDefault();\n\n        this.setState ({ currentMode : this.state.currentMode === 'display' ? 'confirm' : 'display'});\n        \n        this.props.handler(e);\n    }\n\n    render()\n    {\n        return (\n            <button className={`DeleteButton DeleteButton--${this.state.currentMode}`} onClick={this.handleClick} title=\"Delete Game\">\n                <span className=\"sr-only\">\n                    {this.state.currentMode === 'display' ? 'Edit' : 'Confirm'}\n                </span>\n                <i className=\"DeleteButton__icon\" role=\"presentation\"></i>\n            </button>);\n    }\n}\n\nexport default DeleteButton;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport DataHelper from '../DataHelper';\n\nclass GameSelect extends React.Component\n{\n    static propTypes = {\n        games : PropTypes.object.isRequired,\n        defaultValue : PropTypes.string,\n        excludedGames : PropTypes.array //doesn't work... yet\n    };\n\n    static defaultProps =  {\n        includeToplevel : false,\n        defaultValue : 'game0',\n        onChange : function(e){},\n        excludedGames : []\n    }\n\n    innerSelect = React.createRef();\n\n    test = () => this.innerSelect;\n\n    outPutOptions = () => {\n        \n        let options = [];\n\n        this.data = new DataHelper(this.props.games);\n\n        this.data.forEach((key) => {\n            let game = this.data.getGameByKey(key);\n\n            options.push(<option key={'game-select_' + key} value={key}>\n                {game.title}\n            </option>)\n        },this.data.sortGamesBy('title','asc',this.props.games));\n\n        return options;\n    }\n    render()\n    {\n        console.log(this.props.defaultValue);\n        return (\n            <select className=\"GameSelect\" ref={this.innerSelect} onChange={this.props.onChange} defaultValue={this.props.defaultValue}>\n                {/* this.props.includeToplevel ? <option value=\"\">Top Level</option> : null */}\n                {this.outPutOptions()}\n            </select>);\n    }\n}\n\nexport default GameSelect;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport EditButton from './EditButton';\nimport DeleteButton from './DeleteButton';\nimport DataHelper from '../DataHelper';\nimport {Link} from 'react-router-dom';\nimport GameSelect from './GameSelect';\n\nclass RuleRow extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            editing : false,\n            rule : null\n        }\n    }\n    \n\n    ruleField = React.createRef();\n    drinksField = React.createRef();\n    gameSelect = React.createRef();\n\n    static propTypes = {\n        ruleIndex : PropTypes.string.isRequired,\n        gameIndex : PropTypes.string.isRequired, //this is for the game showing the rule, not the game owning the rule\n                                                //using getGameRules() will return a struct of rules each with a new gameKey field for\n                                                //the key of the game that owns that rule\n        rule : PropTypes.object.isRequired,\n        editRule : PropTypes.func.isRequired,\n        deleteRule : PropTypes.func.isRequired,\n        games : PropTypes.object.isRequired\n    };\n    \n    static defaultProps =  {\n        \n    }\n\n    componentDidUpdate()\n    {\n        if(this.ruleField && this.ruleField.current)\n        {\n            this.ruleField.current.focus();\n        }\n    }\n\n    handleRuleEdit = (e) => {\n\n        let editing = this.state.editing;\n        \n\n        //let drinksField = this.state.drinksField.current;\n        //let ruleField = this.state.ruleField.current;\n\n        console.log(this.drinksField,this.ruleField);\n\n        if(this.drinksField \n            && this.ruleField\n            && this.drinksField.current\n            && this.ruleField.current)\n        {\n            let drinks = this.drinksField.current.value;\n            let rule = this.ruleField.current.value;\n\n            if(drinks === '')\n            {\n                drinks = this.state.rule.drinks;\n            }\n\n            if(rule === '')\n            {\n                rule = this.state.rule.rule;\n            }\n\n            let ruleObj = {...this.state.rule};\n                ruleObj.rule = rule;\n                ruleObj.drinks = drinks;\n            \n                ruleObj.gameKey = this.gameSelect.current.innerSelect.current.value;//.innerSelect.value;\n\n            this.props.editRule(this.props.rule.gameKey,this.props.ruleIndex,ruleObj);\n\n            this.setState({\n                rule : ruleObj\n            });\n        }\n        \n\n        this.setState({\n            editing : !editing})\n\n            /*\n        if(editing)\n        {\n            let rule = {\n            rule : this.ruleField.current ? this.ruleField.current.value : this.state.rule.rule,\n            drinks : this.drinksField.current.value\n        };\n            this.props.editRule(this.props.rule.gameKey,this.props.ruleIndex,rule);\n        }\n        else\n        {\n            console.log(this.rule);\n            //this.ruleField.current.focus();\n        }\n\n        this.setState({\n            rule : rule\n        }); */\n\n    }\n\n    handleRuleDelete = (e) => { \n        \n        if(this.state.editing)\n        {\n            this.setState({editing : false});\n        }\n        else\n        {\n            if(window.confirm(`Are you sure you want to Delete the rule ${this.state.rule.rule} (${this.state.rule.drinks})?`))\n            {\n                this.props.deleteRule(this.props.rule.gameKey,this.props.ruleIndex);\n    \n                this.setState({editing : false});\n            }\n        }\n    }\n\n    renderRule = () =>\n    {\n        let input = <input className=\"RuleRow__title-field editable\" onKeyUp={(e) => {\n\n            this.closeOnEscape(e);\n\n            if(e.which === 13)\n            {\n                this.handleRuleEdit();\n            }\n        }} type=\"text\" ref={this.ruleField} defaultValue={this.state.rule.rule} />;\n        let span = <span className=\"RuleRow__title-field\">{this.state.rule.rule}</span>;\n\n        return this.state.editing ? input : span;\n    }\n\n    componentWillMount()\n    {\n        this.setState({rule : this.props.rule});\n        this.data = new DataHelper(this.props.games);\n    }\n    renderOwner = (ownerhash) => {\n        \n        let user = this.props.getUser(ownerhash);\n\n        return <span className=\"RuleRow__owner\">{user ? user.email : 'Unknown User'}</span>\n\n    }\n    renderDrinks = () => {\n        let input = <input \n            className=\"RuleRow__drinks-field editable\" \n            type=\"text\" \n            disabled={!this.state.editing} \n            ref={this.drinksField} \n            defaultValue={this.props.rule.drinks}\n            onKeyUp={(e) => {\n\n                console.log(e.which);\n\n                this.closeOnEscape(e);\n\n                if(e.which === 13)\n                {\n                    this.handleRuleEdit();\n                }\n            }} />\n        let span = <span className=\"RuleRow__drinks-field\">{this.props.rule.drinks}</span>;\n\n        return this.state.editing ? input : span;\n    }\n\n    handleDoubleClick = (e) => {\n        \n        if(!this.state.editing)\n        {\n            this.setState({editing : true});\n        }\n    }\n\n    renderGame = (game) => {\n        \n        return this.state.editing ? \n                <GameSelect\n                    games={this.props.games}\n                    defaultValue={this.props.rule.gameKey}\n                    ref={this.gameSelect} />\n                : <Link to={`/game/${this.props.rule.gameKey}`} className=\"RuleRow__game-link\">{game.title}</Link>;\n    }\n\n    closeOnEscape = (e) => {\n\n        if(e.which === 27)\n        {\n            this.setState({editing : false});\n        }\n    }\n\n    render()\n    {\n        let game = this.data.getGameByKey(this.props.rule.gameKey);\n\n        return (\n            <tr className=\"RuleRow\" onDoubleClick={this.handleDoubleClick}>\n                \n                <td className=\"RuleRow__rule-cell\">\n                    {this.renderRule()}\n                </td>\n                <td className=\"RuleRow__drinks-cell\">\n                    {this.renderDrinks()}\n                </td>\n                <td className=\"RuleRow__game-cell\">\n                    {this.renderGame(game)}\n                </td>\n                <td className=\"RuleRow__owner-cell\">\n                    {this.renderOwner(this.props.rule.owner)}\n                </td>\n                <td className=\"RuleRow__controls-cell\">\n                    {this.props.canEditRule(this.props.rule) ? <EditButton handler={this.handleRuleEdit} /> : null}\n                    {this.props.canDeleteRule(this.props.rule) ? <DeleteButton handler={this.handleRuleDelete} /> : null}\n                </td>\n            </tr>);\n    }\n}\n\nexport default RuleRow;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DataHelper from '../DataHelper';\nimport RuleRow from './RuleRow';\n\nclass RulesList extends React.Component\n{\n    state = {\n        rules : undefined,\n        currentFilter : '',\n        order : null\n    };\n\n    static propTypes = {\n        recursive : PropTypes.bool,\n        index : PropTypes.string.isRequired,\n        games : PropTypes.object.isRequired,\n        editRule : PropTypes.func.isRequired,\n        deleteRule : PropTypes.func.isRequired,\n        getUser : PropTypes.func.isRequired \n    };\n\n    static defaultProps =  {\n        recursive : false\n    }\n\n    filterField = React.createRef();\n\n    componentDidMount()\n    {\n        window.addEventListener('keydown',(e) => {\n            \n            if(e.shiftKey && (e.metaKey || e.ctrlKey) && e.which === 70) //ctrl/cmd + shift + f\n            {\n                this.filterField.current.focus();\n            }\n        })\n    }\n\n    ruleMatchesFilter = (ruleText) => {\n\n        //console.log(this.state.currentFilter,ruleText);\n\n        if(this.state.currentFilter === '') return true;\n\n        return this.state.currentFilter.toLowerCase().indexOf(ruleText.toLowerCase()) > -1 ||\n            ruleText.toLowerCase().indexOf(this.state.currentFilter.toLowerCase()) > -1;\n    }\n\n    renderRuleRows = () =>\n    {\n        return <tbody>{this.data.forEach((key)=>{\n\n            let rule = this.rules[key];\n\n            if(this.ruleMatchesFilter(rule.rule))\n            {\n                return <RuleRow \n                    games={this.props.games}\n                    key={key} \n                    rule={rule} \n                    ruleIndex={key}\n                    gameIndex={this.props.index} \n                    deleteRule={this.deleteRule} \n                    editRule={this.props.editRule}\n                    canEditRule={this.props.canEditRule}\n                    canDeleteRule={this.props.canEditRule}\n                    getUser={this.props.getUser}\n                />\n            }\n            \n        },this.rules)}</tbody>\n    }\n\n    onFilterKeyUp = (e) => {\n    \n        //e.preventDefault();\n        let target = e.currentTarget;\n        let val = target.value;\n\n        this.setState({currentFilter : val});\n        \n    }\n\n    deleteRule = (gameIndex,ruleIndex) => {\n\n        let rules = {...this.rules};\n\n        if(rules[ruleIndex])\n        {\n            delete rules[ruleIndex];\n            this.setState({rules});\n\n            //console.log(gameIndex,ruleIndex);\n            this.props.deleteRule(gameIndex,ruleIndex);\n        }\n    }\n\n    onHeaderCellClick = (e) => {\n        let target = e.target;\n\n        if(target)\n        {\n            let field = target.getAttribute('data-field');\n\n            let order = this.state.order ? {...this.state.order} : {field : '',direction : ''};\n\n            if(order.field === field)\n            {\n                order.direction = order.direction === 'asc' ? 'desc' : 'asc';\n            }\n            else\n            {\n                order.direction = 'asc';\n                order.field = field;\n            }\n\n            this.setState({order});\n        }\n    }\n\n    renderSortLabel = (field) => {\n\n        if(!this.state.order) return null;\n\n        return field === this.state.order.field ?\n            this.state.order.direction === 'asc' ? <span className=\"RulesList__sort-direction fa fa-chevron-up\"></span> : <span className=\"RulesList__sort-direction fa fa-chevron-down\"></span>\n            : null\n    }\n\n    getSnapshotBeforeUpdate(prevProps,prevState)\n    {\n        this.currentGameKey = this.props.index;\n\n        return null;\n    }\n\n    getSnapshotAfterUpdate()\n    {\n        this.currentGameKey = this.props.index;\n    }\n    \n    render()\n    {\n        if(this.currentGameKey !== this.props.index && this.currentGameKey)\n        {\n            setTimeout(() => {\n                this.filterField.current.value = '';\n                this.onFilterKeyUp({currentTarget : this.filterField.current});\n            }, 1);\n        }\n\n        this.data = new DataHelper(this.props.games);\n\n        this.rules = this.data.getGameRules(this.props.index,true);\n\n        if(this.state.order)\n        {\n            this.rules = this.data.sortRules(this.rules,this.state.order);\n            //console.log(this.rules);\n        }\n\n        return (\n            <div className=\"RulesList\">\n                <header className=\"RulesList__header\">\n                    <input \n                        ref={this.filterField}\n                        type=\"search\" \n                        className=\"RulesList__filter-field\" \n                        placeholder=\"Find A Rule\" \n                        onKeyUp={this.onFilterKeyUp} />\n                </header>\n                \n                <table cellPadding=\"0\" cellSpacing=\"0\">\n                    <thead className=\"RulesList__header\">\n                        <tr>\n                            <th className=\"RulesList__rule-cell\" \n                                data-field=\"rule\"\n                                onClick={this.onHeaderCellClick}>Rule{this.renderSortLabel('rule')}</th>\n                            <th className=\"RulesList__drinks-cell\" \n                                data-field=\"drinks\"\n                                onClick={this.onHeaderCellClick}>Drinks{this.renderSortLabel('drinks')}</th>\n                            <th className=\"RulesList__game-cell\" \n                                data-field=\"game\"\n                                onClick={this.onHeaderCellClick}>Game{this.renderSortLabel('game')}</th>\n                            <th className=\"RulesList__owner-cell\" \n                                data-field=\"owner\">Owner</th>\n                            <th className=\"RulesList__controls-cell\">&nbsp;</th>\n                        </tr>\n                    </thead>\n                    \n                    {this.renderRuleRows()}\n                </table>\n            </div>);\n    }\n}\n\nexport default RulesList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GameSelect from './GameSelect';\nimport DataHelper from '../DataHelper';\n\nclass AddRulesForm extends React.Component\n{\n    static propTypes = {\n        games : PropTypes.object.isRequired,\n        gameIndex : PropTypes.string.isRequired,\n        addRule : PropTypes.func.isRequired\n    };\n\n    static defaultProps =  {}\n\n    gameSelect = React.createRef();\n    ruleField = React.createRef();\n    drinksField = React.createRef();\n    \n    componentWillMount()\n    {\n        this.data = new DataHelper(this.props.games);\n        \n        window.addEventListener('keypress',this.onWindowKeyPress);\n    }\n\n    onWindowKeyPress = (e) => {\n\n        //console.log(e);\n\n        if(e.which === 174 && e.altKey) //alt + r\n        {\n            this.ruleField.current.focus();\n            e.preventDefault();\n        }\n    }\n\n    resetForm = () => \n    {\n        this.gameSelect.current.test().current.value = this.props.gameIndex;\n        this.ruleField.current.focus();\n    }\n\n    clearForm = () =>\n    {\n        this.ruleField.current.value =\n        this.drinksField.current.value = '';\n    }\n\n    handleAddClick = (e) => {\n        let gameKey = this.gameSelect.current.innerSelect.current.value;\n\n        let ruleTitle = this.ruleField.current.value;\n        let drinks = this.drinksField.current.value;\n        \n        if(ruleTitle === '' || drinks === '' || !gameKey || gameKey === '')\n        {\n            alert('Please choose a game, enter a rule and a drink penalty.');\n\n            return;\n        }\n        let rule = {\n            rule : ruleTitle,\n            drinks : drinks\n        };\n\n        this.props.addRule(gameKey,rule);     \n        this.clearForm();\n        this.resetForm();   \n    }\n\n    onKeyUp = (e) => {\n\n        if(e.which === 13) // Enter\n        {\n            this.handleAddClick();\n            e.preventDefault();\n        }\n    }\n    render()\n    {\n        this.data = new DataHelper(this.props.games);\n        \n        let games = this.data.sortGamesBy('title','asc',this.props.games);\n        \n        return (\n            <div className=\"AddRulesForm\">\n                <GameSelect \n                    games={games} \n                    name=\"game\" \n                    defaultValue={this.props.gameIndex} \n                    ref={this.gameSelect} className=\"AddRulesForm__game-select\" />\n                <textarea placeholder=\"Rule\" name=\"rule\" ref={this.ruleField} className=\"AddRulesForm__rule-field\"></textarea>\n                <input \n                    type=\"text\" \n                    name=\"drinks\" \n                    ref={this.drinksField}\n                    onKeyUp={this.onKeyUp} \n                    placeholder=\"Drinks\" \n                    className=\"AddRulesForm__drinks-field\" />\n                <button type=\"button\" onClick={this.handleAddClick}>Add Rule</button>\n            </div>);\n    }\n}\n\nexport default AddRulesForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Alert extends React.Component\n{\n    static propTypes = {\n        tag : PropTypes.string,\n        type : PropTypes.string\n    };\n    \n    static defaultProps = {\n        tag : 'span',\n        type : 'info'\n    };\n\n    render()\n    {\n        const Tag = `${this.props.tag}`;\n\n        return (\n            <Tag className={`Alert Alert--${this.props.type}`}>\n                {this.props.children}\n            </Tag>);\n    }\n}\n\nexport default Alert;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GameList from './GameList';\nimport EditButton from './EditButton';\nimport DeleteButton from './DeleteButton';\nimport { Link } from \"react-router-dom\";\nimport DataHelper from '../DataHelper';\n\nclass GameListItem extends React.Component\n{\n    titleField = React.createRef();\n\n    state = {\n        editing :false,\n        game : {}\n    }\n\n    static propTypes = {\n        index : PropTypes.string.isRequired,\n        game : PropTypes.object.isRequired,\n        games : PropTypes.object.isRequired,\n        showChildren : PropTypes.bool,\n        editGame : PropTypes.func.isRequired,\n        deleteGame : PropTypes.func.isRequired,\n        copyGame : PropTypes.func.isRequired,\n        userLoggedIn : PropTypes.func.isRequired\n    };\n\n    static defaultProps =  {\n        showChildren :  false\n    }\n\n    onAddEditClick = (e) => {\n\n        let editing = !this.state.editing;\n\n        if(!editing)\n        {\n            this.props.game.title = this.titleField.current.value;\n            this.props.editGame(this.props.index,this.props.game);\n        }\n\n        this.setState({editing : editing});\n    }\n\n    onDeleteClick = (e) => {\n        if(window.confirm(`Are you sure you want to delete \"${this.game.title}\"`))\n        {\n            this.props.deleteGame(this.props.index);\n        }\n        \n    }\n\n    componentWillMount()\n    {\n        this.setState({game : this.props.game});\n        \n    }\n\n    //onClick={(e) => this.props.history.push(`/game/${this.props.index}`)} \n    onNameInputKeyPress = (e) => {\n        \n        if(e.which === 13) //enter\n        {\n            this.onAddEditClick();\n        }\n    }\n    renderName = () => {\n        let input = <input \n                        onClick={this.viewGame} \n                        name=\"GameListItem__title\" \n                        ref={this.titleField} \n                        className=\"GameListItem__title editable\" \n                        onKeyPress={this.onNameInputKeyPress}\n        defaultValue={this.game.title} />;\n        const link = <Link \n                        to={`/game/${this.props.index}`}\n                        className=\"GameListItem__title\" \n                        >\n                        {this.game.title}\n                        </Link>;\n\n        return this.state.editing ? input : link;\n    }\n\n    handleDoubleClick = (e) => {\n        \n        if(!this.state.editing)\n        {\n            this.setState({editing : true});\n        }\n    }\n\n    onCopyClick = (e) =>\n    {\n        this.props.copyGame(this.props.index);\n    }\n\n    componentDidUpdate()\n    {\n        if(this.titleField && this.titleField.current)\n        {\n            this.titleField.current.focus();\n        }\n    }\n    \n    render()\n    {\n\n        this.data = new DataHelper(this.props.games);\n\n        this.game = this.data.getGameByKey(this.props.index);\n\n        //console.log(this.game);\n\n        //console.log(this.props.canDeleteGame);\n\n        return (\n            <li className=\"GameListItem\" id={this.props.index} onDoubleClick={this.handleDoubleClick}>\n                <header className=\"GameListItem__header\">\n                    {this.renderName()}\n\n                    <span className=\"GameListItem__controls-shell\">\n                        {this.props.canEditGame(this.game) ? <EditButton handler={this.onAddEditClick} /> : null}\n                        {this.props.canDeleteGame(this.props.index) ? <DeleteButton handler={this.onDeleteClick} /> : null}\n                        {this.props.userLoggedIn() ? <button type=\"button\" className=\"GameListItem__copy-btn\" onClick={this.onCopyClick} title=\"Copy Game\">\n                            <span className=\"sr-only\">duplicate this game</span>\n                            <i className=\"fa fa-copy\"></i>\n                        </button> : null}\n                    </span>\n\n                </header>\n                {\n                    this.props.showChildren ? <GameList \n                        game={this.game} \n                        games={this.props.games} \n                        parent={this.props.index}\n                        canEditGame={this.props.canEditGame}\n                        canEditRule={this.props.canEditRule}\n                        canDeleteGame={this.props.canDeleteGame}\n                        canDeleteRule={this.props.canEditRule}\n                        copyGame={this.props.copyGame} /> : null\n                }     \n            </li>);\n    }\n}\n\nexport default GameListItem;","import React from 'react';\nimport DataHelper from '../DataHelper';\nimport PropTypes from 'prop-types';\nimport Alert from './Alert';\nimport GameListItem from './GameListItem';\n\nclass GameList extends React.Component\n{\n    static propTypes = {\n        editGame : PropTypes.func.isRequired,\n        deleteGame : PropTypes.func.isRequired,\n        userLoggedIn : PropTypes.func.isRequired,\n        games : PropTypes.object.isRequired, //the object of all raw games data from App.state.games\n        parent : PropTypes.string //the key of the parent game, for which to show child games. Undefined = top level games\n    };\n\n    static defaultProps =  {\n        parent : undefined\n    }\n\n    componentWillMount()\n    {\n        this.data = new DataHelper(this.props.games);\n    }\n\n    renderGameList = () => {\n        \n        //console.log('render game list',this.props);\n\n        if(!this.data || !this.data.hasData())\n        {\n            //console.log('te');\n            return <Alert type=\"error\" tag=\"li\">No Games</Alert>\n        }\n        else\n        {\n            this.data = new DataHelper(this.props.games);\n\n            //return null;\n\n            //console.log('list has data');\n            //this.prop\n            let childGames = this.props.parent !== undefined ? \n                this.data.getChildGames(this.props.parent) : this.data.sortGamesBy('title','asc',this.props.games);\n\n            childGames = this.data.sortGamesBy('title','asc',childGames);\n\n            return this.data.forEach((key) => <GameListItem \n                deleteGame={this.props.deleteGame} \n                editGame={this.props.editGame}\n                copyGame={this.props.copyGame} \n                key={key} \n                index={key} \n                games={childGames} \n                game={this.data.getGameByKey(key)}\n                canEditGame={this.props.canEditGame}\n                canEditRule={this.props.canEditRule}\n                canDeleteGame={this.props.canDeleteGame}\n                userLoggedIn={this.props.userLoggedIn}\n                canDeleteRule={this.props.canEditRule} />,childGames);\n                \n        }\n    }\n\n\n    render()\n    {\n        this.data = new DataHelper(this.props.games);\n\n        //console.log('game list render');\n        \n\n        return (\n            <ul className=\"GameList\">\n                {this.renderGameList()}\n            </ul>);\n    }\n}\n\nexport default GameList;","export const GENERAL_RULES_KEY = 'game0';\n\nexport const RAYMOND_UID = 'uGqTXpxQHzg4K7DRhObVWvValvF3';","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DataHelper from '../DataHelper';\nimport { GENERAL_RULES_KEY } from '../constants';\n\nclass GameAutoComplete extends React.Component\n{\n    constructor(props){\n\n        super(props);\n\n        this.state = {\n            suggestions : [],\n            selectedGames : [],\n            currentSelection : 0,\n            currentSuggestion : 0\n        }\n    }\n    static propTypes = {\n        games : PropTypes.object.isRequired,\n        selectedGames : PropTypes.array.isRequired,\n        excludedGames : PropTypes.array,\n        defaultValue : PropTypes.array, //an array of games to autofill into the field\n        onGameSelect : PropTypes.func.isRequired,\n        placeholder : PropTypes.string,\n        includeGeneralRules : PropTypes.bool\n    };\n\n    static defaultProps = {\n       placeholder : 'Game Title',\n       excludedGames : [],\n       includeGeneralRules : false\n    }\n\n    titleField = React.createRef();\n\n    data = new DataHelper(this.props.games);\n\n    onTitleFieldKeyPress = (e) => {\n\n        if(this.state && this.state.suggestions && !this.allSuggestionsSelected())\n        {\n            switch(e.which)\n            {\n                case 40: //down / next\n                    this.nextSuggestion();\n                    break;\n                case 38: //up /previous\n                    this.previousSuggestion();\n                    break;\n                case 27: //esc / clear\n                    this.clearSuggestions();\n                    break;\n                case 13:\n                    \n                    let game = this.state.suggestions[this.state.currentSuggestion];\n\n\n                    if(game && game.gameKey)\n                    {\n                        this.chooseGame(game);\n                    }    \n\n                    e.preventDefault();\n                    break;\n                default :\n                    console.log(e.which);\n            }\n        }\n\n        this.renderAutoComplete(e.target.value);\n        \n    }\n\n    isSelected = (game) => {\n\n        let success = false;\n\n        for(let g in this.props.selectedGames)\n        {\n            if(this.props.selectedGames[g].gameKey === game.gameKey)\n            {\n                success = true;\n                break;\n            }\n        }\n\n        return success;\n    }\n\n    clearSuggestions = () => {\n        \n        this.titleField.current.value = '';\n        this.renderAutoComplete('');\n\n        this.setState({\n            currentSuggestion : 0\n        });\n    }\n\n    renderAutoComplete = (q) => {\n\n        let suggestions = [];\n\n        q = q.toLowerCase();\n\n        if(q !== '')\n        {\n            this.data.forEach((key) => {\n\n                let game = this.props.games[key];\n                let shouldInclude = true;\n\n                if(game.title.toLowerCase().indexOf(q) > -1)\n                {\n                    if(game.gameKey === GENERAL_RULES_KEY)\n                    {\n                        shouldInclude = this.props.includeGeneralRules;\n                    }\n\n                    shouldInclude = !this.props.excludedGames.includes(game.gameKey);\n                    \n                    if(shouldInclude)\n                    {\n                        game.gameKey = key;\n\n                        suggestions.push(game);\n                    }\n                    \n                }\n    \n            },this.props.games);\n        }\n        \n\n        this.setState({suggestions});\n    }\n    \n    chooseGame = (game) => {\n\n        this.titleField.current.value = game.title;\n\n        this.props.onGameSelect(game);\n\n        this.clearTitleField();\n\n        this.titleField.current.focus();\n    }\n\n    clearTitleField = () => {\n        this.titleField.current.value = '';\n        this.setState({suggestions : []});\n    }\n\n    setCurrentSuggestion = (i) => {\n        this.setState({currentSuggestion : i});\n    }\n\n    previousSuggestion = () => {\n\n        let previousSuggestion = this.findPreviousSuggestion(this.state.currentSuggestion || this.state.suggestions.length || 0);\n\n        this.setCurrentSuggestion(previousSuggestion);\n    }\n\n    findPreviousSuggestion = (current) => {\n\n        let prevIndex = current === 0 ? this.state.suggestions.length - 1 : current - 1;\n\n        console.log(current,prevIndex);\n\n        return this.isSelected(this.state.suggestions[prevIndex]) ? this.findPreviousSuggestion(prevIndex) : prevIndex;\n    }\n\n    nextSuggestion = () => {\n\n        let nextSuggestion = this.findNextSuggestion(this.state.currentSuggestion || 0);\n\n        this.setCurrentSuggestion(nextSuggestion);\n    }\n\n    findNextSuggestion = (current) => {\n\n        let nextIndex = current === this.state.suggestions.length - 1 ? 0 : current + 1;\n\n        return this.isSelected(this.state.suggestions[nextIndex]) ? this.findNextSuggestion(nextIndex) : nextIndex;\n    }\n\n    allSuggestionsSelected = () => {\n\n        let allSelected = this.state.suggestions.length > 0;\n\n        for(let i in this.state.suggestions)\n        {\n            let game = this.state.suggestions[i];\n\n            if(!this.isSelected(game))\n            {\n                allSelected = false;\n                break;\n            }\n        }\n        \n        return allSelected;\n    }\n\n    renderSuggestions = () => {\n\n        if(this.state && this.state.suggestions && this.state.suggestions.length > 0)\n        {\n            return (<ul className=\"GameAutoComplete__suggestions\" style={{height : `${this.state.suggestions.length * 1.55}em`}}>\n                {this.state.suggestions.map((game,i) => {\n\n                    let shouldInclude = true;\n\n                    let classes = ['GameAutoComplete__suggestion'];\n\n                    if(this.isSelected(game))\n                    {\n                        classes.push('GameAutoComplete__suggestion--selected');    \n                    }\n                    \n                    if(i === this.state.currentSuggestion || (!this.state.currentSuggestion && i === 0))\n                    {\n                        classes.push('GameAutoComplete__suggestion--current')\n                    }\n\n                    return (shouldInclude ? <li className={classes.join(' ')} \n                                                key={`gac_${game.gameKey}`} \n                                                onClick={(e) => {this.chooseGame(game);}}\n                                                onMouseEnter={(e) => {\n                                                    if(!this.isSelected(game))\n                                                    {\n                                                        this.setCurrentSuggestion(i,game);\n                                                    }\n                                                    }}>\n                        {game.title}\n                    </li> : null);\n                })}\n            </ul>);\n        }\n    }\n\n    render()\n    {\n        //console.log(this.props.selectedGames);\n        return (<div className=\"GameAutoComplete\">\n                    <input type=\"text\" ref={this.titleField} placeholder={this.props.placeholder} onKeyUp={this.onTitleFieldKeyPress} />\n                    {this.renderSuggestions()}\n                </div>);\n    }\n}\n\nexport default GameAutoComplete;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nclass GamePill extends React.Component\n{\n    static propTypes = {\n        game : PropTypes.object.isRequired,\n        tag : PropTypes.string,\n        onClick : PropTypes.func,\n        onClose : PropTypes.func,\n        showCloseBtn : PropTypes.bool,\n        linkGame : PropTypes.bool\n    };\n\n    static defaultProps = {\n        tag : 'li',\n        showCloseBtn : true,\n        linkGame : false\n    }\n\n    onClose = (e) => {\n\n        this.props.onClose(e,this.props.game);\n    }\n\n    render()\n    {\n        const Tag = `${this.props.tag}`;\n\n        return (\n            <Tag className={`GamePill GamePill--${this.props.game.gameKey}`}>\n                {this.props.linkGame ? <Link to={`/game/${this.props.game.gameKey}`}>{this.props.game.title}</Link> : this.props.game.title}\n                {this.props.showCloseBtn ? <button className=\"GamePill__close-btn\" onClick={this.onClose}>&times;</button> : null}\n            </Tag>);\n    }\n}\n\nexport default GamePill;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GameAutoComplete from './GameAutoComplete';\nimport GamePill from './GamePill';\nimport { GENERAL_RULES_KEY } from '../constants';\nimport DataHelper from '../DataHelper';\n\nclass GameMultiSelect extends React.Component\n{\n    static propTypes = {\n        games : PropTypes.object.isRequired,\n        includeToplevel : PropTypes.bool,\n        defaultValue : PropTypes.array,\n        placeholder : PropTypes.string,\n        onError : PropTypes.func.isRequired,\n        selectedGames : PropTypes.array,\n        excludedGames : PropTypes.array\n    };\n\n    static defaultProps = {\n        selectedGames : [],\n        excludedGames : []\n    }\n\n    state = {\n        selectedGames : this.props.selectedGames,\n        includeToplevel : true\n    }\n\n    /*\n        check the array of selected games for any collisions or unecessary data\n        -no need to add a game's parent\n    */\n    sanitizeGames = (games) => {\n\n        if(!this.gameSelected(GENERAL_RULES_KEY))\n        {\n            let data = new DataHelper(this.props.games);\n            let gen = data.getGameByKey(GENERAL_RULES_KEY);\n                gen.gameKey = GENERAL_RULES_KEY;\n                games.push(gen);\n        }\n\n        return games;\n    }\n\n    clearGames = () => {\n        this.setState({selectedGames : []});\n    }\n\n    newGameSelect = (game) => {\n        \n        if(!this.gameSelected(game))\n        {\n            let games = this.state.selectedGames;\n                games.push(game);\n            \n            this.setState({\n                selectedGames : games\n            });\n        }\n    }\n\n    gameSelected = (game) => {\n\n        let selected = false;\n        let gameKey = typeof game === 'object' ? game.gameKey : game;\n\n        this.state.selectedGames.forEach((selectedGame,i) => {\n\n            if(gameKey === selectedGame.gameKey)\n            {\n                selected = true;\n                return;\n            }\n        });\n\n        return selected;\n    }\n\n    onGameRemoved = (e,gameToRemove) => {\n\n        let games = this.state.selectedGames;\n            games = games.filter((game) => {\n                return gameToRemove.gameKey !== game.gameKey;\n            });\n        \n            this.setState({selectedGames : games});\n    }\n\n    renderGames =() => {\n        \n        return this.state.selectedGames.map((game) => {\n            \n            return (<GamePill \n                        key={`gms_${game.gameKey}`} \n                        game={game}\n                        onClose={this.onGameRemoved} />);\n        });\n    }\n\n    render()\n    {\n\n        return (\n            <ul className=\"GameMultiSelect\">\n                {this.renderGames()}\n                <li className=\"GameMultiSelect__add-game\">\n                    <GameAutoComplete \n                        games={this.props.games}\n                        selectedGames={this.state.selectedGames} \n                        onGameSelect={this.newGameSelect} \n                        placeholder={this.props.placeholder}\n                        excludedGames={this.props.excludedGames} />\n                </li>\n            </ul>);\n    }\n}\n\nexport default GameMultiSelect;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport GameMultiSelect from './GameMultiSelect';\n//import DataHelper from '../DataHelper';\n\n//import {GENERAL_RULES_KEY} from '../constants';\n\nclass AddGameForm extends React.Component\n{\n    static propTypes = {\n        games : PropTypes.object.isRequired,\n        addGame : PropTypes.func.isRequired,\n        parent : PropTypes.array,\n        listenForShortcuts : PropTypes.bool\n    };\n\n    static defaultProps =  {\n        parent : ['game0'],\n        listenForShortcuts : false\n    };\n\n    titleField = React.createRef();\n    gameSelect = React.createRef();\n\n    resetForm = () => {\n        this.clearForm();\n        this.titleField.current.focus();\n    }\n\n    clearForm = () => {\n        this.titleField.current.value = '';\n        this.gameSelect.current.clearGames();\n    }\n\n    onKeyUp = (e) => {\n\n        //console.log('key up');\n        \n        if(this.props.listenForShortcuts && e.which === 13) // Enter\n        {\n            this.onAddGameClick();\n            e.preventDefault();\n        }\n    }\n\n    onAddGameClick = (e) => {\n\n       //console.log(this.gameSelect.current.innerSelect.current.value);\n\n        let title = this.titleField.current.value;\n        let parents = this.gameSelect.current.state.selectedGames;//.value;\n\n        // if(title === '' || !parent || parent === '')\n        // {\n        //     //if the parent or title arent filled,  don't do anything. The alerts below were firing twice\n        //     //when hitting enter on the Add Game button so this return prevents the alert when a game is successfully being added\n\n        //     return; //todo: figure out WHY keyup fires on the button too\n            \n        //     // if(title === '')\n        //     // {\n        //     //     alert('Please enter a game title');\n        //     // }\n        //     // else if(!parent || parent === '')\n        //     // {\n        //     //     alert('Please choose a parent from the drop down.');\n        //     // }\n            \n        //     // return;\n        // }\n        \n        this.props.addGame(title,parents);\n        this.resetForm();\n    }\n\n    //handle all error or info events from multiselect\n    onMultiSelectError = (e) => {\n        console.log(e);\n    }\n\n    render()\n    {\n        //console.log(this.props);\n        //let data = new DataHelper(this.props.games);\n\n        return (\n            <div className=\"AddGameForm\">\n                {/* <label>Parent Game</label>  */}<GameMultiSelect\n                    games={this.props.games}\n                    includeToplevel={true}\n                    defaultValue={this.props.parent}\n                    ref={this.gameSelect}\n                    placeholder=\"Add a Parent Game\"\n                    onError={this.onMultiSelectError}\n                />\n                <input type=\"text\" placeholder=\"Game Title\" ref={this.titleField} onKeyUp={this.onKeyUp} />\n                <button type=\"text\" onClick={this.onAddGameClick}>Add Game</button>\n            </div>);\n    }\n}\n\nexport default AddGameForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ComboCounter extends React.Component\n{\n    static propTypes = {\n        setSessionCombo : PropTypes.func.isRequired,\n        count : PropTypes.number\n    };\n    \n    static defaultTypes = {\n        count : 0\n    };\n\n    state = {\n        //count : 0,\n        animating : false,\n        open : true\n    }\n\n    maxCombo = 10;\n\n    animateSpeed = 180;\n\n    componentWillMount()\n    {\n        window.addEventListener('keyup', this.onGlobalKeyPress);\n    }\n\n    onGlobalKeyPress = (e) => {\n\n        let targetTag = e.target.tagName.toLowerCase();\n\n        if(targetTag === 'input' || \n            targetTag === 'textarea' || \n            targetTag === 'select') return;\n\n        switch(e.which)\n        {\n            case 107 : //plus\n                this.addDrink();\n                break;\n            case 109 : //minus\n                this.removeDrink();\n                break;\n            case 106 : //multiply / asterisk (to clear)\n                this.clearDrinks();\n                break;\n\n            default : break;\n        }\n    }\n\n    addDrink = () => {\n\n        if(this.props.count < this.maxCombo)\n        {\n            let count = this.props.count + 1;\n\n            this.props.setSessionCombo(count);\n            \n        }\n    }\n\n    removeDrink = () =>\n    {\n        if(this.props.count > 0)\n        {\n            this.props.setSessionCombo(this.props.count - 1);\n        }\n    }\n\n    clearDrinks = () => {\n\n        this.props.setSessionCombo(0);\n        \n    }\n\n    handleRemoveDrinkClick = (e) => {\n\n        if(this.props.count > 0)\n        {\n            this.removeDrink();    \n            this.animateCount();\n        }\n    }\n\n    handleClearDrinksClick = (e) => {\n\n        this.clearDrinks();\n    }\n\n    animateCount = () => {\n        \n        this.setState({\n            animating : true\n        });\n\n        setTimeout(() => {\n            this.setState({\n                animating : false\n            });\n    \n        }, this.animateSpeed);\n    }\n\n    handleAddDrinkClick = (e) => {\n\n        if(this.props.count < this.maxCombo)\n        {\n            this.addDrink();\n    \n            this.animateCount();\n        }\n        \n    }\n\n    calcShotHeight = () => {\n        \n        if(this.props.count === 0) return 0;\n\n        return ((this.props.count / this.maxCombo) * 100) + '%';\n    }\n\n    handleToggleClick = (e) => {\n\n        this.setState({\n            open : !this.state.open\n        })\n    }\n\n\n    render()\n    {\n        return (\n            <aside className={`ComboCounter${this.state.animating ? ' ComboCounter--animating' : ' ComboCounter--animated'}${this.props.count === this.maxCombo ? ' ComboCounter--full' : ''}${this.props.count === 0 ? ' ComboCounter--empty' : ''}${this.state.open ? ' ComboCounter--open' : ' ComboCounter--closed'}`}>\n                \n                <button className=\"ComboCounter__toggle-btn ComboCounter__toggle-btn--open\" onClick={this.handleToggleClick}>\n                    <i className=\"fa fa-chevron-left\"></i>\n                </button>\n                \n                <div className=\"ComboCounter__count\">\n                    {this.props.count}\n                </div>\n\n                <div className=\"ComboCounter__glass-wrap\">\n\n                    <div className=\"ComboCounter__shot-glass\">\n                        <div className=\"ComboCounter__shot-volume\" style={{height : this.calcShotHeight()}}></div>\n                    </div>\n\n                    <div className=\"ComboCounter__button-shell\">\n                        <button className=\"ComboCounter__remove-drink-btn\" onClick={this.handleRemoveDrinkClick}>-</button>\n                        <button className=\"ComboCounter__clear-drinks-btn\" onClick={this.handleClearDrinksClick}>&times;</button>\n                    </div>\n                </div>\n                \n                <button className=\"ComboCounter__add-drink-btn\" onClick={this.handleAddDrinkClick}>+</button>\n\n                <button className=\"ComboCounter__toggle-btn ComboCounter__toggle-btn--close\" onClick={this.handleToggleClick}>\n                    <i className=\"fa fa-chevron-right\"></i>\n                </button>\n\n            </aside>);\n    }\n}\n\nexport default ComboCounter;","import React from 'react';\nimport DataHelper from '../DataHelper';\nimport PropTypes from 'prop-types';\nimport NotFound from './NotFound';\nimport RulesList from './RulesList';\nimport AddRulesForm from './AddRulesForm';\nimport GameList from './GameList';\nimport AddGameForm from './AddGameForm';\n//import {changePageTitle} from '../helpers';\n//import GameSelect from './GameSelect';\nimport EditButton from './EditButton';\n//import GameListItem from './GameListItem';\nimport DeleteButton from './DeleteButton';\nimport {Link} from 'react-router-dom';\nimport ComboCounter from './ComboCounter';\n//import {GENERAL_RULES_KEY} from '../constants';\nimport GamePill from './GamePill';\nimport GameMultiSelect from './GameMultiSelect';\nimport {Helmet} from \"react-helmet\";\n\nclass Game extends React.Component\n{\n    state = {\n        game : undefined,\n        editing : false\n    }\n\n    static propTypes = {\n        index : PropTypes.string.isRequired,\n        games : PropTypes.object,\n        editRule : PropTypes.func.isRequired,\n        deleteRule : PropTypes.func.isRequired,\n        editGame : PropTypes.func.isRequired,\n        deleteGame : PropTypes.func.isRequired,\n        canEditGame : PropTypes.func.isRequired,\n        canDeleteGame : PropTypes.func.isRequired,\n        getUser : PropTypes.func.isRequired\n    }\n\n    titleInput = React.createRef();\n    editButton = React.createRef();\n    shell = React.createRef();\n    parentsMS = React.createRef();\n\n    gameScrollPostBeforeUpdate = 0;\n\n    onParentChange = (e) => {\n        \n        let newParent = e.currentTarget.value;\n\n        let thisGameKey = this.props.index;\n\n        let game = {...this.data.getGameByKey(thisGameKey)};\n\n        game.parent_game = newParent;\n\n        console.log(game);\n\n        this.props.editGame(thisGameKey,game);\n    }\n\n    handleTitleEditClick = (e) => {\n\n        if(this.state.editing)\n        {\n            let game = this.data.getGameByKey(this.props.index);\n            let newTitle = this.titleInput.current.value;//.replace(/(^[ ]+|[ ]+$)/,'');\n\n            if(newTitle === '')\n            {\n                this.titleInput.current.value = game.title;\n            }\n            else //if(this.titleInput.current.value !== game.title)\n            {\n                this.data = new DataHelper(this.props.games);\n\n                game.title = this.titleInput.current.value;\n                \n                game.parent_game = this.data.gamesToKeys(this.parentsMS.current.state.selectedGames);\n\n                this.props.editGame(this.props.index,game);\n            }\n            \n        }\n        else\n        {\n            this.titleInput.current.focus();\n            \n        }\n        \n        this.setState({editing : !this.state.editing});\n    }\n\n    \n\n\n    onDeleteClick = (e) => {\n        this.data = new DataHelper(this.props.games);\n\n        let game = this.data.getGameByKey(this.props.index);\n\n        if(window.confirm(`Are you sure you want to delete \"${game.title}\"?`))\n        {\n            this.props.deleteGame(this.props.index);\n        }\n        \n    }\n\n    renderParentPills = () => {\n\n        let game = this.data.getGameByKey(this.props.index);\n        let parents = this.data.getParentGames(game);\n\n        if(this.state.editing)\n        {\n            return (<div className=\"Game__parents\"><GameMultiSelect\n                        ref={this.parentsMS}\n                        selectedGames={parents}\n                        excludedGames={[this.props.index]}\n                        games={this.props.games} /></div>);\n        }\n        else\n        {\n            \n                return (parents && parents.length > 0 ? <ul className=\"Game__parents\">{parents.map((parent) => {\n                    return <GamePill linkGame={true} key={`pill_${parent.gameKey}`} game={parent} showCloseBtn={false} />\n                })}</ul> : null);\n        }\n        \n    }\n\n    renderBreadCrumbs = () => {\n\n        let ancestors = this.data.getAncestors(this.props.index);\n\n        let html = [];\n\n        ancestors.forEach((ancestor,i) => {\n\n            html.push(<Link to={`/game/${ancestor.key}`}>\n                {ancestor.game.title}\n            </Link>);\n    \n            if(i < ancestors.length - 1)\n            {\n                html.push(<span class=\"Game__parent-delimiter\">&gt;</span>);\n            }\n        });\n\n        return html;\n    }\n\n    getSnapshotBeforeUpdate(prevProps,prevState)\n    {\n        this.gameScrollPostBeforeUpdate = this.shell.current ? this.shell.current.scrollTop : 0;\n        this.currentGameKey = this.props.index;\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps)\n    {\n        setTimeout(() => {\n            \n            if(this.shell.current)\n                this.shell.current.scrollTo(0,this.gameScrollPostBeforeUpdate);\n\n                \n        }, 1);\n\n        if(this.state.editing)\n        {\n            this.titleInput.current.focus();\n        }\n\n        if(this.shell.current)\n            this.shell.current.scrollTo(0,0);\n    }\n\n    render()\n    {\n        this.data = new DataHelper(this.props.games);\n\n        let game = this.data.getGameByKey(this.props.index);\n\n        //let parentGame = game.parent_game ? this.data.getGameByKey(game.parent_game) : null;\n\n        if(!game) return NotFound;\n\n        //changePageTitle(game.title + ' | Drinking Games'); \n        \n        return (\n            <div className={`Game ${this.state.editing ? ' Game--editing' : ''}`} ref={this.shell}>\n            <Helmet>\n                <title>\n                    {game.title + ' | Drinking Games'}\n                </title>\n            </Helmet>\n                <ComboCounter setSessionCombo={this.props.setSessionCombo} count={this.props.currentComboCount} />\n                {this.renderParentPills()}\n                <h1 className=\"Game__title\">\n                    <input \n                        name={this.props.index + Date.now()} \n                        key={this.props.index + Date.now()} \n                        type=\"text\"\n                        style={{width: `${game.title.length}ch`}} \n                        defaultValue={game.title}\n                        ref={this.titleInput}\n                        disabled={!this.state.editing}\n                        className=\"Game__title-value editable\"\n                        onKeyPress={(e) => {\n                            if(e.which === 13)\n                            {\n                                this.handleTitleEditClick();\n                            }\n                        }} />\n                    {this.props.canEditGame(this.props.index) ? <div className=\"Game__parent-change-select\">\n                        \n                        <EditButton handler={this.handleTitleEditClick} ref={this.editButton} />\n                        {this.props.canDeleteGame(this.props.index) ? <DeleteButton handler={this.onDeleteClick} /> : null}\n                     </div> : null}\n                     \n                </h1>\n\n                <section className=\"Game__rules\">\n                <h2>Rules</h2>\n\n                <RulesList \n                    games={this.props.games} \n                    index={this.props.index} \n                    recursive={true} \n                    deleteRule={this.props.deleteRule} \n                    editRule={this.props.editRule}\n                    canEditRule={this.props.canEditRule}\n                    canDeleteRule={this.props.canEditRule}\n                    getUser={this.props.getUser} />\n\n                </section>\n\n                {this.props.userLoggedIn() ? <section className=\"Game__add-rules\">\n                    \n\n                    <h3>Add Rule</h3>    \n\n                    <AddRulesForm \n                        games={this.props.games} \n                        gameIndex={this.props.index}\n                        addRule={this.props.addRule} />\n                </section> : null}\n\n                <section className=\"Game__child-games\">\n                    <h2>Sub Games</h2>    \n\n                    <GameList \n                        parent={this.props.index} \n                        editGame={this.props.editGame} \n                        games={this.props.games}\n                        deleteGame={this.props.deleteGame}\n                        copyGame={this.props.copyGame}\n                        canEditGame={this.props.canEditGame}\n                        canEditRule={this.props.canEditRule}\n                        canDeleteGame={this.props.canDeleteGame}\n                        canDeleteRule={this.props.canEditRule}\n                        userLoggedIn={this.props.userLoggedIn}\n                        />\n                    \n                    <h3>Add A Sub Game</h3>\n\n                    {this.props.userLoggedIn() ? <AddGameForm\n                        games={this.props.games}\n                        parent={[this.props.index]}\n                        addGame={this.props.addGame} /> : null }\n                </section>\n            </div>);\n    }\n}\n\nexport default Game;","import React from 'react';\nimport DataHelper from '../DataHelper';\nimport GameList from './GameList';\nimport AddGameForm from './AddGameForm';\nimport PropTypes from 'prop-types';\n\nclass Games extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            visible : true\n        };\n\n        setTimeout(() => {\n            this.setState({visible : false});\n        }, 1500);\n    }\n    static propTypes = {\n        editGame : PropTypes.func.isRequired,\n        games : PropTypes.object.isRequired,\n        addGame : PropTypes.func.isRequired,\n        userLoggedIn : PropTypes.func.isRequired\n    }\n\n    static defaultProps =  {\n        parent : 'game0'\n    };\n\n    data = null;\n\n    onToggleClick = (e) => {\n        this.setState({\n            visible : !this.state.visible\n        });\n    }\n\n    render()\n    {\n        this.data = new DataHelper(this.props.games);\n\n        let games = this.props.games;//this.data.sortGamesBy('title','asc');\n        \n        //console.log(this.props.canDeleteGame);\n        \n        return (\n            <div className={`Games ${this.state.visible ? 'Games--visible' : ''}`}>\n                <button \n                    type=\"button\" \n                    className=\"Games__toggle-btn\"\n                    onClick={this.onToggleClick}\n                >\n                    {this.state.visible ? <i className=\"fa fa-chevron-left\"></i> : <i class=\"fa fa-bars\"></i>}\n                </button>\n                <h1>Drinking Games</h1>\n\n                <GameList \n                    games={games} \n                    deleteGame={this.props.deleteGame} \n                    editGame={this.props.editGame}\n                    canEditGame={this.props.canEditGame}\n                    canEditRules={this.props.canEditRules}\n                    canDeleteGame={this.props.canDeleteGame}\n                    canDeleteRules={this.props.canEditRules}\n                    copyGame={this.props.copyGame}\n                    userLoggedIn={this.props.userLoggedIn}\n                     />\n\n                {this.props.userLoggedIn() ? \n                    <section className=\"Games__add-a-game\">\n                        <h2>Add a Game</h2>\n                        <AddGameForm\n                                games={this.props.games}\n                                listenForShortcuts={true}\n                                addGame={this.props.addGame} />\n                    </section> \n                : null}\n            </div>);\n    }\n}\n\nexport default Games;","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass SessionManager extends React.Component\n{\n    static propTypes = {\n        currentSession : PropTypes.object,\n        leaveSession : PropTypes.func.isRequired,\n        createSession : PropTypes.func.isRequired,\n        joinSession : PropTypes.func.isRequired\n    };\n    //static defaultTypes = {}\n\n    state = {\n        currentSession : this.props.currentSession\n    }\n\n    keyField = React.createRef();\n\n    handleCreateSession = (e) => {\n        \n        this.props.createSession();\n\n    }\n\n    leaveSession = () => {\n        this.setState({currentSession : undefined});\n        this.props.leaveSession();\n    }\n\n    handleJoinSession = (e) => {\n\n        let key = this.keyField.current.value;\n        this.props.joinSession(key);\n    }\n\n    renderSessionButtons = () => {\n\n        if(this.props.currentSession === undefined)\n        {\n            return (<div className=\"SessionManager__buttons\">\n                        <button className=\"SessionManager__create-session\" onClick={this.handleCreateSession}>Create Session</button>\n                        <input type=\"text\" className=\"SessionManager__key-field\" ref={this.keyField} placeholder=\"Session Code\" />\n                        <button className=\"SessionManager__join-session\" onClick={this.handleJoinSession}>Join Session</button>\n                    </div>);\n        }\n        else\n        {\n            return <div className=\"SessionManager__current-session\">\n                <a title=\"Copy this link address and send to people you want to join the session\" href={`/join/${this.props.currentSession}`} className=\"SeassionManager__session-key\">{this.props.currentSession}</a>\n                <button className=\"SessionManager__leave-session-btn\" onClick={this.leaveSession}>Leave Session</button>\n            </div>;\n        }\n    }\n\n    render()\n    {\n        return (\n            <div className=\"SessionManager\">\n                {this.renderSessionButtons()}\n            </div>);\n    }\n}\n\nexport default SessionManager;","import React from 'react';\n//import PropTypes from 'prop-types'\n\nclass ShortcutsModal extends React.Component\n{\n    //static propTypes = {};\n    \n    //static defaultTypes = {}\n\n    state = {\n        open : false\n    }\n\n    shortcuts = [\n        {\n            combo : '+ (plus)',\n            desc : 'Adds a drink to the Combo Counter'\n        },\n        {\n            combo : '- (minus)',\n            desc : 'Removes a drink from the Combo Counter'\n        },\n        {\n            combo : '* (asterisk)',\n            desc : 'Resets the Combo Count to 0'\n        },\n        {\n            combo : 'cmd / ctrl + shift + F',\n            desc : 'Focuses the rule filter field in a Game to filter the rules'\n        },\n        {\n            combo : 'option / alt + R',\n            desc : 'Focus Add a Rule form'\n        }\n\n    ]\n\n    show = () => {\n        //this.dialog.current.showModal();\n        this.setState({open : true});\n    }\n\n    close = () => {\n        this.setState({open : false});\n    }\n\n    renderShortcuts = () => {\n\n        return this.shortcuts.map((shortcut,i) => {\n            return (<li key={`shortcut_${i}`} className=\"ShortcutsModal__shortcut\">\n                <div className=\"ShortcutsModal__shortcut-keys\">\n                    {shortcut.combo}\n                </div>\n                <div className=\"ShortcutsModal__shortcut-description\">\n                    {shortcut.desc}\n                </div>\n            </li>);\n        });\n    }\n\n    componentWillMount()\n    {\n\n        window.addEventListener('keyup',(e) => {\n\n            if(e.which === 27)\n            {\n                this.close();\n            }\n        })\n    }\n\n    render()\n    {\n        return (\n            <div className={`ShortcutsModal${this.state.open ? ' ShortcutsModal--open' : ''}`}>\n                <div className=\"ShortcutsModal__dialog\">\n                    <header className=\"ShortcutsModal__dialog-header\">\n                        <h2 className=\"ShortcutsModal__title\">Keyboard Shortcuts</h2>\n                        <button className=\"ShortcutsModal__close-btn\" onClick={this.close}>&times;</button>\n                    </header>\n                    <div className=\"ShortcutsModal__body\">\n                        <ul className=\"ShortcutsModal__shortcuts\">\n                            {this.renderShortcuts()}\n                        </ul>\n                    </div>\n                </div>\n            </div>);\n    }\n}\n\nexport default ShortcutsModal;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Game from './Game';\nimport Games from './Games';\nimport Alert from './Alert';\nimport SessionManager from './SessionManager';\nimport {Link,withRouter} from 'react-router-dom';\nimport ShortcutsModal from './ShortCutsModal';\n\nclass Desktop extends React.Component\n{\n    static propTypes = {\n        games : PropTypes.object.isRequired,\n        editRule : PropTypes.func.isRequired,\n        deleteRule : PropTypes.func.isRequired,\n        deleteGame : PropTypes.func.isRequired,\n        addRule : PropTypes.func.isRequired,\n        editGame : PropTypes.func.isRequired,\n        addGame : PropTypes.func.isRequired,\n        userLoggedIn : PropTypes.func.isRequired,\n        getUser : PropTypes.func.isRequired\n    };\n\n    static defaultProps =  {}\n\n    shortcuts = React.createRef();\n\n    showShortcuts = () => {\n        this.shortcuts.current.show();\n    }\n\n    render()\n    {\n        //console.log(this.props.games);\n        //console.log(this.props.canDeleteGame);\n\n        return (\n            <main className=\"Desktop\">\n                <Games \n                    games={this.props.games} \n                    editGame={this.props.editGame} \n                    addGame={this.props.addGame} \n                    deleteGame={this.props.deleteGame}\n                    canEditGame={this.props.canEditGame}\n                    canEditRule={this.props.canEditRule}\n                    canDeleteGame={this.props.canDeleteGame}\n                    canDeleteRule={this.props.canEditRule}\n                    copyGame={this.props.copyGame}\n                    userLoggedIn={this.props.userLoggedIn}\n                    getUser={this.props.getUser}\n                     />\n\n                {this.props.mode === 'game' ? <div className=\"GameShell\">\n                <header className=\"App__header\">\n                    <span>\n                        <Link to=\"/\" className=\"App__home-link\">Home</Link>\n                        {this.props.renderAuthButton()}\n                    </span>\n\n                    <SessionManager\n                        createSession={this.props.createSession}\n                        leaveSession={this.props.leaveSession}\n                        joinSession={this.props.joinSession}\n                        currentSession={this.props.currentSession}\n                    />\n                    \n                    <span className=\"App__current-user\">\n                        \n                        {this.props.user.email}\n                    </span>\n\n                    <button className=\"App__shortcuts-ref\" onClick={this.showShortcuts}>\n                        <i className=\"fa fa-keyboard-o\"></i>\n                    </button>\n                </header>\n                <Game \n                            index={this.props.match.params.ID} \n                            games={this.props.games} \n                            editRule={this.props.editRule} \n                            deleteRule={this.props.deleteRule}\n                            deleteGame={this.props.deleteGame}\n                            addRule={this.props.addRule}\n                            editGame={this.props.editGame}\n                            addGame={this.props.addGame}\n                            canEditGame={this.props.canEditGame}\n                            canEditRule={this.props.canEditRule}\n                            canDeleteGame={this.props.canDeleteGame}\n                            canDeleteRule={this.props.canEditRule}\n                            copyGame={this.props.copyGame}\n                            userLoggedIn={this.props.userLoggedIn}\n                            getUser={this.props.getUser}\n                            setSessionCombo={this.props.setSessionCombo}\n                            currentComboCount={this.props.currentComboCount}\n                             /></div> \n                        : <div className=\"Desktop__alert-shell\"><Alert tag=\"div\" type=\"info\">Choose a game from the left hand menu</Alert></div>}\n                <ShortcutsModal ref={this.shortcuts} />\n            </main>);\n    }\n}\n\nexport default withRouter(Desktop);","import React from 'react';\nimport Alert from './Alert';\nimport {Link} from 'react-router-dom';\n\nclass Login extends React.Component\n{\n    userField = React.createRef();\n    passwordField = React.createRef();\n\n    authenticate = (e) => {\n        \n        console.log('loader auth');\n\n        let user = this.userField.current.value;\n        let pass = this.passwordField.current.value;\n\n        this.props.authenticate(user,pass);\n    }\n\n    render()\n    {\n        return (\n            <div className=\"Login\">\n                <form className=\"Login__form\">\n                    <h2>Login</h2>\n                    <p>Sign in to start drinking</p>\n\n                    {this.props.error ? <Alert type=\"error\">{this.props.error}</Alert> : null}\n\n                    <input type=\"text\" required ref={this.userField} placeholder=\"Email\" />\n                    <input type=\"password\" required ref={this.passwordField} placeholder=\"Password\" />\n\n                    <button type=\"button\" className=\"Login__login\" onClick={this.authenticate}>Turn Down For What</button>\n                    <Link className=\"Login__signup \" to=\"/signup\">Get Started Turnin' Up</Link>\n                </form>\n            </div>);\n    }\n}\n\nexport default Login;","const config = {\n    firebase : {\n        apiKey: \"AIzaSyBqPifaPtgVVbc222q6U09NBRuHTn9ECr0\",\n        authDomain: \"raymond-catch-of-the-day.firebaseapp.com\",\n        databaseURL: \"https://raymond-catch-of-the-day.firebaseio.com\",\n        projectId: \"raymond-catch-of-the-day\",\n        storageBucket: \"raymond-catch-of-the-day.appspot.com\",\n        messagingSenderId: \"425132188904\",\n        appId: \"1:425132188904:web:04405d03ba6769cc5f555d\",\n        measurementId: \"G-SJZ98PJSWE\"\n    }\n}\n\nexport default config;","import Rebase from 're-base';\nimport firebase from 'firebase';\nimport config from './config';\n\nconst firebaseApp = firebase.initializeApp(config.firebase);\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport {firebaseApp};\n\nexport default base;","import React from 'react';\nimport Alert from './Alert';\n//import {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass Signup extends React.Component\n{\n    userField = React.createRef();\n    passwordField = React.createRef();\n    passwordField2 = React.createRef();\n\n    state = {\n        error : null\n    }\n\n    static propTypes = {\n        error : PropTypes.string,\n        signup : PropTypes.func.isRequired,\n    }\n\n    static defaultProps =  {\n        error : null\n    }\n\n    componentWillMount()\n    {\n        this.setState({error : this.props.error});\n    }\n\n    signup = (e) => {\n\n        let user = this.userField.current.value;\n        let pass1 = this.passwordField.current.value;\n        let pass2 = this.passwordField2.current.value;\n\n        if(pass1 !== pass2)\n        {\n            //console.log(pass1,pass2);\n            this.setState({error : `Passwords don't match`});\n        }\n        else\n        {\n            this.props.signup(user,pass1);\n        }\n        \n    }\n\n    render()\n    {\n        //console.log('signup render');\n\n        let error = this.props.error || this.state.error;\n\n        return (\n            <div className=\"Signup\">\n                <form className=\"Signup__form\">\n                    <h2>Signup</h2>\n                    <p>Sign in to start drinking</p>\n\n                    {error ? <Alert type=\"error\">{error}</Alert> : null}\n\n                    <input type=\"text\" required ref={this.userField} placeholder=\"Email\" />\n                    <input type=\"password\" required ref={this.passwordField} placeholder=\"Password\" />\n                    <input type=\"password\" required ref={this.passwordField2} placeholder=\"Confirm Password\" />\n\n                    <button type=\"button\" className=\"Signup__Signup\" onClick={this.signup}>Turn Down For What</button>\n                </form>\n            </div>);\n    }\n}\n\nexport default Signup;","import React from 'react';\n//import Games from './Games';\n//import Game from './Game';\n//import NotFound from './NotFound';\nimport fakeGames from '../fakeGames.js';\nimport DataHelper from '../DataHelper';\nimport Loader from './Loader';\nimport Desktop from './Desktop';\nimport Login from './Login';\nimport firebase from 'firebase';\nimport base from '../base';\nimport Signup from './Signup';\nimport {GENERAL_RULES_KEY,RAYMOND_UID} from '../constants';\nimport {Link,withRouter} from 'react-router-dom';\nimport ShortCutsModal from './ShortCutsModal';\n\nclass App extends React.Component\n{\n    state = {\n        games : {},\n        mobile : false,\n        user : {uid : ''},\n        users : {},\n        loading : true,\n        signupError : null,\n        loginError : null,\n        loggingIn : false,\n        currentSession : undefined,\n        sessions : {},\n        gamesInited : false\n    }\n\n    \n\n    sessionKeyLength = 4;\n\n    sessionLife = 1000 * 60 * 60 * 24;//24 hours\n\n    shortCutsModal = React.createRef();\n    \n    editGame = (key,game) => {\n        \n        const games = {...this.state.games};\n\n        games[key] = game;\n\n        this.setState({games});\n    }\n\n    getCurrentSessionComboCount = () => {\n        return this.inASession() ? this.state.sessions[this.state.currentSession].currentComboCount : 0;\n    }\n\n    setSession = (key) => {\n\n        let session = {\n            created : new Date().getTime(),\n            currentComboCount : 0\n        };\n\n        let sessions = {...this.state.sessions};\n            sessions = this.pruneSessions(sessions);\n\n        sessions[key] = session;\n\n        //console.log(sessions); return;\n\n        this.setState({sessions : sessions});\n\n        setTimeout(() => {\n            this.joinSession(key);\n        }, 10);\n        \n    }\n\n    inASession = () => {\n        return this.state.currentSession !== undefined;\n    }\n\n    setSessionCombo = (count) => {\n\n        if(this.inASession())\n        {\n            let sessions = {...this.state.sessions};\n                sessions[this.state.currentSession].currentComboCount = count;\n            \n            this.setState({sessions});\n        }\n        else\n        {\n            alert('The Combo Counter can only be used in a session');\n        }\n    }\n\n    pruneSessions = (sessions) => {\n\n        let now = new Date().getTime();\n\n        this.data.forEach((key) => {\n\n            let session = sessions[key];\n\n            if(now - session.created >= this.sessionLife)\n            {\n                sessions[key] = null;\n            }\n\n        },sessions);\n\n        //console.log(sessions);\n\n        return sessions;\n    }\n\n    joinSession = (key) => {\n        \n        key = key.toUpperCase();\n\n        if(this.sessionKeyExists(key))\n        {\n            this.setState({currentSession : key});\n\n            window.sessionStorage.setItem('currentSession',key);\n\n            return true;\n        }\n        else\n        {\n            //console.log(key,this.state.sessions);\n\n            alert(`No session with the code \"${key}\" currently exists.`);\n            return false;\n        }\n    }\n\n    leaveSession = () => {\n        this.setState({currentSession : undefined});\n        window.sessionStorage.removeItem('currentSession');\n    }\n\n    sessionKeyExists = (key) => {\n        return this.state.sessions[key] !== undefined\n    }\n\n    generateSessionKey = () => {\n\n        let key = '';\n        let code;\n\n        for(let i = 0; i < this.sessionKeyLength; i++)\n        {\n            code = Math.round(Math.random() * 25) + 65;\n\n            //console.log(code,key);\n            key += String.fromCharCode(code);    \n        }\n\n        return key.toUpperCase();\n    }\n\n    generateUniqueSessionKey = () => {\n        let key = this.generateSessionKey();\n\n        do\n        {\n            key = this.generateSessionKey();\n        }\n        while(this.state.sessions[key] !== undefined);\n        \n        return key;\n    }\n\n    createSession = () => {\n\n        let key = this.generateUniqueSessionKey();\n\n        this.setSession(key);\n\n        return key;\n    }\n\n    componentWillUpdate()\n    {\n        //console.log(this.props.location.pathname);\n    }\n\n    componentDidMount()\n    {\n        let db = window.location.hostname === 'localhost' ? 'dev' : 'live';\n        \n        //console.log(db);\n        this.fbRefU = base.syncState(`drinking-games/${db}/users`,{\n            context : this,\n            state : 'users'});\n\n        this.fbRefSessions = base.syncState(`drinking-games/${db}/sessions`,{\n            context : this,\n            state : 'sessions',\n            then : (t) => {\n                let ssKey = window.sessionStorage.getItem('currentSession');\n        \n                if(ssKey && !this.inASession())\n                {\n                    this.joinSession(ssKey);\n                }\n            }});\n\n        //base.listenTo('drinking-games/games',)\n        this.fbRef = base.syncState(`drinking-games/${db}/games`,{\n            context : this,\n            state : 'games',\n            then : (t) => {\n\n                //console.log('got games from fb',this.state.games);\n\n                this.data = new DataHelper(this.state.games);\n\n                //after we sync the state to firebase, if there are no games, load up some fake ones for testing\n                if(Object.keys(this.state.games).length === 0)\n                {\n                    this.setState({games : fakeGames });\n                }\n\n                this.setState({loading:false});\n\n                //the first time tha games sync, check if any parent_game keys are strings and make them arrays.\n                \n                // if(!this.state.gamesInited)\n                // {\n                //     let games = {...this.state.games};\n\n                //     this.data.forEach((key)=>{\n\n                //         let game = games[key];\n\n                //         if(typeof game['parent_game'] == 'string')\n                //         {\n                //             games[key]['parent_game'] = [game['parent_game']];\n                //         }\n\n                //         if(games[key].parent_game && !games[key].parent_game.includes(GENERAL_RULES_KEY))\n                //         {\n                //             games[key].parent_game.push(GENERAL_RULES_KEY);\n                //         }\n                //     },games);\n\n                //     this.setState({\n                //         games : games,\n                //         gamesInited : true\n                //     });\n                // }\n            }\n        });\n\n        \n        \n        firebase.auth().onAuthStateChanged(user => {\n            \n            if(user)\n            {\n                this.authHandler({user});\n            }\n        });\n    }\n\n    canEditRule = (rule) => {\n\n        return this.userLoggedIn(); //this.state.user.uid === this.RAYMOND_UID || rule.owner === this.state.user.uid;\n    }\n\n    canEditGame = (gameKey) => {\n\n        /* console.log('======================CHECKING CAN EDIT');\n        console.log(game);\n        \n        console.table({\n            'state user id' : this.state.user.uid,\n            'raymond user id' : this.RAYMOND_UID,\n            'game owner' : game.owner\n        }); */\n        let game = typeof gameKey === 'string' ? this.data.getGameByKey(gameKey) : gameKey;\n\n        //console.log(game.title,this.state.user.uid === this.RAYMOND_UID || (game.owner && game.owner === this.state.user.uid));\n        return this.state.user.uid === RAYMOND_UID || (game.owner && game.owner === this.state.user.uid);\n    }\n\n    canDeleteRule = (rule) => {\n\n        return this.state.user.uid === RAYMOND_UID || rule.owner === this.state.user.uid;\n    }\n\n    canDeleteGame = (gameKey) => {\n\n        let game = this.data.getGameByKey(gameKey);\n\n        if(this.state.user.uid === RAYMOND_UID) return true;\n\n        if(!game.owner || game.owner !== this.state.user.uid) return false;\n\n        //console.log('game owner');\n\n        let success = this.data.gameHasOtherUserGames(gameKey,this.state.user.uid);// && !this.data.gameHasOtherUserOwnedRules(gameKey,this.state.user.uid);\n\n        return success;\n    }\n\n\n\n    editRule = (gameKey,ruleKey,newRule) =>\n    {\n        console.log(gameKey,ruleKey,newRule);\n\n        let games = {...this.state.games};\n\n        let game = games[gameKey];\n        \n        newRule.drinks = this.sanitizeDrinks(newRule.drinks);\n\n        if(game && game.rules && game.rules[ruleKey] && gameKey === newRule.gameKey)\n        {\n            games[gameKey].rules[ruleKey] = newRule;\n        }\n        else\n        {\n            console.log('dif gam game');\n\n            let oldGame = game;\n            let newGame = games[newRule.gameKey];\n\n            if(oldGame && newGame)\n            {\n                if(!newGame.rules)\n                {\n                    newGame.rules = {};\n                }\n\n                games[gameKey].rules[ruleKey] = null;\n                games[newRule.gameKey].rules[ruleKey] = newRule;\n            }\n            else\n            {\n                \n            }\n        }\n\n        this.setState({games});\n    }\n\n    deleteRule = (gameKey,ruleKey) =>\n    {\n        let games = {...this.state.games};\n\n        //console.log(gameKey,ruleKey);\n\n        if(games && games[gameKey] && games[gameKey].rules[ruleKey])\n        {\n            games[gameKey].rules[ruleKey] = null;\n\n            //console.log(games);\n            \n            this.setState({games});\n        }\n    }\n\n    addRule = (gameKey,rule) =>\n    {\n        //console.log(gameKey,rule);\n\n        rule.owner = this.state.user.uid;\n\n        let ruleKey = this.data.getNewRuleKey(gameKey);\n\n        let games = {...this.state.games};\n\n        if(!games[gameKey].rules)\n        games[gameKey].rules = {};\n\n        games[gameKey].rules[ruleKey] = rule;\n\n        //console.log(games);\n        \n        this.setState({games});\n    }\n\n    addGame = (gameTitle,parents) =>\n    {\n        let game = {\n            title : gameTitle,\n            rules : {}\n        };\n\n        let parentKey = parents.map((game)=>{\n            return game.gameKey;\n        });\n\n        if(!parentKey.includes(GENERAL_RULES_KEY))\n        {\n            parentKey.push(GENERAL_RULES_KEY);\n        };\n\n        console.log(parentKey);\n\n        game.owner = this.state.user.uid;\n\n        if(parentKey !== '')\n        {\n            game.parent_game = parentKey;\n        }\n\n        let games = {...this.state.games};\n        let newGameKey = this.data.getNewGameKey();\n\n        games[newGameKey] = game;\n\n        this.setState({games});\n\n        this.viewGame(newGameKey);\n\n    }\n\n    copyRules = (rules,oldGameKey,newGameKey) => {\n\n        rules = {...rules};\n\n        let newRules = {};\n\n        this.data.forEach((key) => {\n\n            let newRuleKey = key.replace(oldGameKey,newGameKey);\n\n           //console.log(oldGameKey,newGameKey);\n            //console.log(newRuleKey,key);\n\n            newRules[newRuleKey] = {...rules[key]};\n            newRules[newRuleKey].gameKey = newGameKey;\n            newRules[newRuleKey].owner = this.state.user.uid;\n\n        },rules);\n\n        return newRules;\n    }\n\n    copyGame = (key) => {\n\n        this.data = new DataHelper(this.state.games);\n\n        let games = {...this.state.games};\n\n        let game = {...this.data.getGameByKey(key)};\n\n        let newKey = this.data.getNewGameKey();\n\n        game.title += ' Copy';\n        game.owner = this.state.user.uid;\n\n        games[newKey] = game;\n\n        //if(game.rules && Object.keys(game.rules).length > 0)\n        games[newKey].rules = this.copyRules(game.rules,key,newKey);\n        \n       //console.log(game,games);\n\n        this.setState({games});\n\n        this.viewGame(newKey);\n\n        //console.log(this.data);\n    }\n\n    deleteGame = (key) => {\n\n        let games = {...this.state.games};\n\n        games[key] = null;\n\n        this.setState({games});\n\n        if(key === this.props.match.params.ID)\n        {\n            this.props.history.replace('/');\n        }\n    }\n\n    mobileCheck = (match) => {\n\n        this.setState({mobile : match.matches});\n    }\n\n    viewGame = (key) => this.props.history.push(`/game/${key}`);\n\n    componentWillMount()\n    {\n        //console.log('app will mount');\n        let mobileCheck = window.matchMedia('(max-width: 1000px)');\n            this.mobileCheck(mobileCheck);\n            mobileCheck.addListener(this.mobileCheck);\n    }\n\n    authHandler = async resp => {\n        \n        if(!this.userExists(resp.user))\n        {\n            this.addUser(resp.user);\n        }\n\n        this.setState({\n            user : resp.user,\n            loggingIn : false\n        });\n\n        if(this.props.location.pathname === '/signup')\n        {\n            this.props.history.push('/');\n        }\n        \n    }\n\n    authenticate = (u,p) =>\n    {\n        \n        //let provider = new firebase.auth().signInWithEmailAndPassword('test@test.com','test4$').then(this.authHandler);\n        \n        this.setState({loading : true});\n\n        //console.log('app auth');\n\n        new firebase.auth().signInWithEmailAndPassword(u,p).then((resp) => {\n\n            this.authHandler(resp);\n\n            console.log('firebase login',resp);\n            \n            this.setState({\n                loading : false,\n                signInError : null\n            });\n\n        }).catch((error) => {\n            this.setState({signInError : error.message});\n        });\n    }\n\n    logout = async () => {\n        await firebase.auth().signOut();\n        this.setState({user : {\n            uid : ''\n        }});\n    }\n\n    addUser = (user) => {\n        \n        //console.log(user);\n        \n        let stateUser = {\n            email : user.email\n        }\n\n        let users = {...this.state.users};\n            users[user.uid] = stateUser;\n\n            this.setState({users});\n    }\n\n    getUser = (hash) => {\n        \n        let toRet = null;\n\n        if(this.userExists(hash))\n        {\n            toRet = this.state.users[hash];\n        }\n\n        return toRet;\n    }\n\n    /**\n     * takes some val for a rule's drinks and sanitizes it for addition to the DB\n     */\n    sanitizeDrinks = (val) => {\n        \n        val = val.replace(/([\\d]+) drink(s)?/gi,'$1');\n\n        return val;\n    }\n\n    userExists = (user) => {\n        \n        if(user === undefined) return false;\n\n        try\n        {\n            let uid = typeof user === 'string' ? user : user.uid;\n    \n            return this.state.users[uid] !== undefined;\n            \n        }\n        catch(e)\n        {\n            console.error('Error checking for user',user);\n            return false;\n        }\n    }\n\n    signup = (email,pass) =>\n    {\n        //console.log('app signup');\n\n        firebase.auth().createUserWithEmailAndPassword(email,pass).then((res) => {\n            \n            this.authHandler(res);\n\n        }).catch((error) => {\n\n            //console.log(error);\n\n            this.setState({signupError : error.message});\n        })\n    }\n\n    onLoginClick = (e) => {\n        this.setState({loggingIn : true});\n    }\n\n    userLoggedIn = () => this.state.user.uid !== '';\n\n    renderAuthButton = () => {\n        \n        //<button className=\"App__login-button\" onClick={this.onLoginClick}>Log In</button>\n        //button onClick={this.logout} className=\"App__logout\">Turn Down</button>\n        //<Link to=\"/signup\" className=\"button-link App__sign-up-btn\">Signup</Link>\n\n        if(this.state.user.uid === '')\n        {\n            return (\n                <span>\n                    <button className=\"App__login-button link-button\" onClick={this.onLoginClick}>Log In</button>\n                    <Link to=\"/signup\" className=\"App__sign-up-btn\">Signup</Link>\n                </span>\n            );\n        }\n        else\n        {\n            return (\n                <span>\n                    <button onClick={this.logout} className=\"App__logout-button link-button\">Turn Down</button>\n                </span>\n            );\n        }\n    }\n\n    showShortcuts = () => {\n        this.shortCutsModal.current.show();\n    }\n\n    render()\n    {\n        this.data = new DataHelper(this.state.games);\n\n        //console.log('render app');\n        //return <Loader message=\"Loading...\"/>\n        //console.log(this.state.games);\n\n\n        if(this.state.loggingIn && this.mode !== 'signup')\n            return <Login authenticate={this.authenticate} error={this.state.signInError} />;\n\n        if(Object.keys(this.state.games).length === 0)\n        {\n            //console.log('delay for fb');\n            return <Loader message=\"Turning Up...\" />;\n        }\n\n        //console.log('render app',this.state.loading);\n\n        if(this.state.loading)\n        {\n            return <Loader message=\"Turning Up...\" />;\n        }\n\n        let view = null;\n        \n        // if(this.state.mobile)\n        // {\n        //     switch(this.props.mode)\n        //     {\n        //         case 'join' :\n        //             let key = this.props.match.params.key;\n                    \n        //             if(this.joinSession(key))\n        //             {\n        //                 this.props.history.push('/');\n        //             }\n                    \n        //             break;\n        //         case 'games' :\n        //             view = <Games \n        //                 games={this.state.games} \n        //                 editGame={this.editGame} \n        //                 addGame={this.addGame} \n        //                 deleteGame={this.deleteGame}\n        //                 copyGame={this.copyGame}\n        //                 editRule={this.editRule} \n        //                 deleteRule={this.deleteRule}\n        //                 addRule={this.addRule}\n        //                 mode={this.props.mode}\n        //                 match={this.props.match}\n        //                 canEditGame={this.canEditGame}\n        //                 canEditRule={this.canEditRule}\n        //                 canDeleteGame={this.canDeleteGame}\n        //                 canDeleteRule={this.canDeleteRule}\n        //                 userLoggedIn={this.userLoggedIn}\n        //                 getUser={this.getUser} />;\n        //             break;\n        //         case 'game' :\n        //             view = <Game \n        //                     index={this.props.match.params.ID} \n        //                     games={this.state.games} \n        //                     editGame={this.editGame} \n        //                     addGame={this.addGame} \n        //                     deleteGame={this.deleteGame}\n        //                     copyGame={this.copyGame}\n        //                     editRule={this.editRule} \n        //                     deleteRule={this.deleteRule}\n        //                     addRule={this.addRule}\n        //                     mode={this.props.mode}\n        //                     match={this.props.match}\n        //                     canEditGame={this.canEditGame}\n        //                     canEditRule={this.canEditRule}\n        //                     canDeleteGame={this.canDeleteGame}\n        //                     canDeleteRule={this.canDeleteRule}\n        //                     userLoggedIn={this.userLoggedIn}\n        //                     getUser={this.getUser}\n        //                     setSessionCombo={this.setSessionCombo} />;\n        //             break;\n        //         case 'signup' :\n        //             view = <Signup error={this.state.signupError} signup={this.signup} />;\n        //             break;\n        //         default :\n        //             view = <NotFound />;\n        //     }\n        // }\n        // else\n        // {\n            switch(this.props.mode)\n            {\n                case 'signup' :\n                    view = <Signup signup={this.signup} error={this.state.signupError} />;\n                    break;\n                case 'join' :\n                    let key = this.props.match.params.key;\n\n                    if(this.joinSession(key))\n                    {\n                        this.props.history.push('/');\n                    }\n                    \n                    break;\n                default :\n                    view = <Desktop \n                    games={this.state.games} \n                    editGame={this.editGame} \n                    addGame={this.addGame} \n                    deleteGame={this.deleteGame}\n                    copyGame={this.copyGame}\n                    editRule={this.editRule} \n                    deleteRule={this.deleteRule}\n                    addRule={this.addRule}\n                    mode={this.props.mode}\n                    match={this.props.match}\n                    canEditGame={this.canEditGame}\n                    canEditRule={this.canEditRule}\n                    canDeleteGame={this.canDeleteGame}\n                    canDeleteRule={this.canDeleteRule}\n                    userLoggedIn={this.userLoggedIn}\n                    getUser={this.getUser}\n                    setSessionCombo={this.setSessionCombo}\n                    currentComboCount={this.getCurrentSessionComboCount()}\n                    createSession={this.createSession}\n                    leaveSession={this.leaveSession}\n                    joinSession={this.joinSession}\n                    currentSession={this.state.currentSession}\n                    renderAuthButton={this.renderAuthButton}\n                    user={this.state.user} />\n            }\n            \n        //}\n\n        //view = null;\n        \n        return (\n            \n            <div className={`App App--${this.state.mobile ? 'mobile' : 'desktop'}`}>\n               \n                {view}\n                <ShortCutsModal ref={this.shortCutsModal} />\n            </div>\n            );\n    }\n}\n\nexport default withRouter(App);","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport App from './App';\nimport NotFound from './NotFound';\n\nclass Router extends React.Component\n{\n    render()\n    {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/join/:key\" render={(props) => <App {...props} mode=\"join\" />} />\n                    <Route path=\"/game/:ID\" render={(props) => <App {...props} mode=\"game\" />} />\n                    <Route exact path=\"/signup\" render={(props) => <App {...props} mode=\"signup\" />} />\n                    <Route exact path=\"/\" render={(props) => <App {...props} mode=\"games\" />} />\n                    <Route component={NotFound} />\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default Router;","import React from 'react';\nimport {render} from 'react-dom';\n\nimport Router from './components/Router';\n\nimport './css/style.css';\n\nrender (<Router />, document.querySelector('#main'));"],"sourceRoot":""}